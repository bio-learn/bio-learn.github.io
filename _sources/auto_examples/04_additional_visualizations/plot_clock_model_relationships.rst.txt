
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/04_additional_visualizations/plot_clock_model_relationships.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_04_additional_visualizations_plot_clock_model_relationships.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_04_additional_visualizations_plot_clock_model_relationships.py:


Clock/model visualizations using GEO datasets
=============================================================

This example demonstrates the built-in aging clock/model function to visualize 
different plots on clock(s)/model(s) predictions.

.. GENERATED FROM PYTHON SOURCE LINES 10-12

Import required classes and functions
------------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 12-21

.. code-block:: Python

    from biolearn.data_library import DataLibrary
    from biolearn.model_gallery import ModelGallery
    from biolearn.visualize import (
        plot_clock_correlation_matrix,
        plot_clock_deviation_heatmap,
        plot_age_prediction,
        plot_health_outcome
    )








.. GENERATED FROM PYTHON SOURCE LINES 22-24

Visualize a correlation matrix across aging clocks/models
------------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 24-37

.. code-block:: Python


    # Load an appropriate GEO dataset for the models
    data = DataLibrary().get("GSE120307").load()

    # Create a list of ModelGallery objects to be analyzed.
    modelnames = ["Horvathv1", "Hannum", "PhenoAge", "DunedinPACE", "Lin", "Zhang_10"]
    models = [ModelGallery().get(names) for names in modelnames]

    plot_clock_correlation_matrix(
        models=models,
        data=data,
    )




.. image-sg:: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_001.png
   :alt: plot clock model relationships
   :srcset: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 38-40

Visualize clock/model chronological age deviations across samples in a heatmap
------------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: Python

    plot_clock_deviation_heatmap(
        models=models,
        data=data,
    )




.. image-sg:: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_002.png
   :alt: plot clock model relationships
   :srcset: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 46-48

Visualize aging clock/model predictions against chronological age
------------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 48-58

.. code-block:: Python


    # Use appropriate clocks/models
    modelnames = ["Horvathv1", "Hannum", "PhenoAge", "Lin"]
    age_prediction_models = [ModelGallery().get(name) for name in modelnames]

    plot_age_prediction(
        models=age_prediction_models,
        data=data,
    )




.. image-sg:: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_003.png
   :alt: plot clock model relationships
   :srcset: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 59-61

Visualize model predictions against its corresponding health outcome
------------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 61-72

.. code-block:: Python


    # Load an appropriate GEO dataset for the corresponding model
    down_syndrome_data = DataLibrary().get("GSE52588").load()

    model = [ModelGallery().get("DownSyndrome")]

    plot_health_outcome(
        models=model,
        data=down_syndrome_data,
        # Provide the health outcome column name
        health_outcome_col="disease_state",
    )


.. image-sg:: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_004.png
   :alt: plot clock model relationships
   :srcset: /auto_examples/04_additional_visualizations/images/sphx_glr_plot_clock_model_relationships_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 21.721 seconds)

**Estimated memory usage:**  1483 MB


.. _sphx_glr_download_auto_examples_04_additional_visualizations_plot_clock_model_relationships.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/bio-learn/biolearn/0.7.0?urlpath=lab/tree/notebooks/auto_examples/04_additional_visualizations/plot_clock_model_relationships.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_clock_model_relationships.ipynb <plot_clock_model_relationships.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_clock_model_relationships.py <plot_clock_model_relationships.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
