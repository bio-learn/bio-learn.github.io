Search.setIndex({"docnames": ["authors", "auto_examples/00_epigenetic_biomarkers/index", "auto_examples/00_epigenetic_biomarkers/plot_custom_imputation_implementation", "auto_examples/00_epigenetic_biomarkers/plot_down_syndrome_model", "auto_examples/00_epigenetic_biomarkers/plot_epigenetic_clocks_on_geo", "auto_examples/00_epigenetic_biomarkers/sg_execution_times", "auto_examples/01_composite_biomarkers/index", "auto_examples/01_composite_biomarkers/plot_nhanes", "auto_examples/01_composite_biomarkers/sg_execution_times", "auto_examples/02_challenge_submissions/index", "auto_examples/02_challenge_submissions/simple_competiton_submission", "auto_examples/02_challenge_submissions/training_simple_model", "auto_examples/index", "changes/names", "clocks", "data", "index", "modules/data_library", "modules/generated/biolearn.data_library.DataLibrary", "modules/generated/biolearn.data_library.DataSource", "modules/generated/biolearn.data_library.GeoData", "modules/generated/biolearn.imputation.biolearn_impute", "modules/generated/biolearn.imputation.hybrid_impute", "modules/generated/biolearn.imputation.impute_from_average", "modules/generated/biolearn.imputation.impute_from_standard", "modules/generated/biolearn.load.load_fhs", "modules/generated/biolearn.load.load_nhanes", "modules/generated/biolearn.model_gallery.ModelGallery", "modules/imputation", "modules/index", "modules/load", "modules/model_gallery", "quickstart"], "filenames": ["authors.rst", "auto_examples/00_epigenetic_biomarkers/index.rst", "auto_examples/00_epigenetic_biomarkers/plot_custom_imputation_implementation.rst", "auto_examples/00_epigenetic_biomarkers/plot_down_syndrome_model.rst", "auto_examples/00_epigenetic_biomarkers/plot_epigenetic_clocks_on_geo.rst", "auto_examples/00_epigenetic_biomarkers/sg_execution_times.rst", "auto_examples/01_composite_biomarkers/index.rst", "auto_examples/01_composite_biomarkers/plot_nhanes.rst", "auto_examples/01_composite_biomarkers/sg_execution_times.rst", "auto_examples/02_challenge_submissions/index.rst", "auto_examples/02_challenge_submissions/simple_competiton_submission.rst", "auto_examples/02_challenge_submissions/training_simple_model.rst", "auto_examples/index.rst", "changes/names.rst", "clocks.rst", "data.rst", "index.rst", "modules/data_library.rst", "modules/generated/biolearn.data_library.DataLibrary.rst", "modules/generated/biolearn.data_library.DataSource.rst", "modules/generated/biolearn.data_library.GeoData.rst", "modules/generated/biolearn.imputation.biolearn_impute.rst", "modules/generated/biolearn.imputation.hybrid_impute.rst", "modules/generated/biolearn.imputation.impute_from_average.rst", "modules/generated/biolearn.imputation.impute_from_standard.rst", "modules/generated/biolearn.load.load_fhs.rst", "modules/generated/biolearn.load.load_nhanes.rst", "modules/generated/biolearn.model_gallery.ModelGallery.rst", "modules/imputation.rst", "modules/index.rst", "modules/load.rst", "modules/model_gallery.rst", "quickstart.md"], "titles": ["Team", "Epigenetic Clock Examples", "Performing custom imputations", "Down Syndrome Epigenetic Plotting", "\u201cEpigenetic Clocks\u201d in GEO Data", "Computation times", "Composite Biomarkers Examples", "\u201cPhenotypic Ages\u201d in NHANES Data", "Computation times", "Challenge Submission Examples", "Building a competition submission using an existing model", "Training an ElasticNet model", "Examples", "&lt;no title&gt;", "Clocks and Other Models", "GEO Data Sources", "Biolearn", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.data_library</span></code>: DataLibrary", "biolearn.data_library.DataLibrary", "biolearn.data_library.DataSource", "biolearn.data_library.GeoData", "biolearn.imputation.biolearn_impute", "biolearn.imputation.hybrid_impute", "biolearn.imputation.impute_from_average", "biolearn.imputation.impute_from_standard", "biolearn.load.load_fhs", "biolearn.load.load_nhanes", "biolearn.model_gallery.ModelGallery", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.imputation</span></code>: Data Imputation Utilities", "API References", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.load</span></code>: Data Loading Utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.model_gallery</span></code>: ModelGallery", "Quickstart"], "terms": {"thi": [0, 2, 3, 4, 7, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32], "work": 0, "i": [0, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32], "made": 0, "avail": [0, 16, 32], "commun": [0, 10], "peopl": 0, "which": [0, 11, 26], "origin": [0, 2], "from": [0, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 28, 32], "biomark": [0, 9, 16, 18, 32], "ag": [0, 6, 8, 9, 11, 12, 14, 15, 16, 26, 32], "consortium": [0, 16], "The": [0, 4, 18, 27, 32], "biolearn": [0, 2, 3, 4, 7, 10, 11, 14, 15, 29], "ar": [0, 2, 11, 16, 18, 19, 22, 26, 32], "mahdi": 0, "moqri": 0, "research": [0, 18], "boa": 0, "execut": [0, 5, 8, 12, 32], "martin": 0, "perez": 0, "guevara": 0, "machin": 0, "learn": [0, 16, 32], "engin": 0, "seth": [0, 4], "paulson": 0, "softwar": 0, "architect": 0, "albert": 0, "ying": 0, "harvard": 0, "universii": 0, "dayoon": 0, "kwon": 0, "univers": 0, "california": 0, "special": 0, "thank": 0, "scientif": 0, "member": 0, "plot": [1, 2, 5, 6, 12, 16], "result": [1, 3, 10, 12], "run": [1, 7, 10, 12, 14, 16, 27, 32], "function": [1, 12, 16, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30], "geo": [1, 5, 12, 18, 19], "data": [1, 5, 6, 8, 12, 16, 18, 19, 20, 22, 25, 26, 27, 32], "perform": [1, 5, 7, 12, 24], "custom": [1, 5, 12, 24], "imput": [1, 4, 5, 12, 27], "go": [2, 3, 4, 7, 10, 11], "end": [2, 3, 4, 7, 10, 11], "download": [2, 3, 4, 7, 10, 11, 12], "full": [2, 3, 4, 7, 10, 11], "exampl": [2, 3, 4, 7, 10, 11, 29, 32], "code": [2, 3, 4, 7, 10, 11, 12, 16, 32], "browser": [2, 3, 4, 7, 10, 11], "via": [2, 3, 4, 7, 10, 11], "binder": [2, 3, 4, 7, 10, 11], "demonstr": [2, 16], "eas": 2, "librari": [2, 18, 19, 32], "data_librari": [2, 3, 4, 10, 11, 32], "import": [2, 3, 4, 7, 10, 11], "datalibrari": [2, 3, 4, 11, 19, 32], "geodata": [2, 10, 19], "comput": [2, 16], "averag": [2, 22, 23, 24, 28], "reference_dataset": 2, "gse40279": [2, 11, 15], "reference_averag": 2, "dnam": [2, 4, 11, 20, 21, 22, 23, 24], "mean": [2, 11], "axi": 2, "1": [2, 7, 11], "second": [2, 3, 4, 7, 10, 11], "target_dataset": 2, "gse51057": [2, 15], "impute_from_standard": 2, "imputed_data": 2, "imputed_dataset": 2, "metadata": [2, 3, 11, 19, 20], "model": [2, 9, 12, 18, 20, 27], "galleri": [2, 3, 4, 7, 10, 11, 12, 14], "compar": [2, 16], "epigenet": [2, 5, 15, 16, 19], "model_galleri": [2, 3, 4, 10], "modelgalleri": [2, 3, 4, 10], "clock_model": 2, "horvathv1": [2, 4, 14], "original_age_predict": 2, "imputed_age_predict": 2, "seaborn": [2, 3, 7], "sn": [2, 3, 4, 7], "panda": [2, 4, 10, 11, 20, 25, 26], "pd": [2, 4, 10, 11, 21, 22, 23, 24], "matplotlib": [2, 3, 7, 11], "pyplot": [2, 3, 7, 11], "plt": [2, 3, 7, 11], "prepar": 2, "comparison_data": 2, "datafram": [2, 4, 11, 20, 21, 22, 23, 24, 25, 26], "creat": [2, 3, 20, 32], "scatter": [2, 4, 11], "figur": [2, 3, 4, 11], "figsiz": [2, 3, 11], "8": [2, 4, 8, 11, 22], "6": [2, 3, 11], "scatterplot": [2, 7], "x": [2, 3, 7, 11], "y": [2, 3, 7, 11], "titl": [2, 3, 11, 15], "v": [2, 11, 32], "xlabel": [2, 7, 11], "ylabel": [2, 7, 11], "grid": [2, 11], "true": [2, 3, 11], "show": [2, 10, 11, 16], "imputationdecor": [2, 27], "defin": [2, 11, 18], "method": [2, 27, 28], "def": 2, "custom_impute_method": 2, "dnam_data": 2, "needed_cpg": 2, "return": [2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "wrap": [2, 27], "decorated_clock": 2, "decorated_clock_predict": 2, "verifi": [2, 32], "direct": 2, "approach": 2, "same_result": 2, "all": [2, 12, 23, 24], "print": [2, 11], "total": [2, 3, 4, 5, 7, 8, 10, 11, 16], "time": [2, 3, 4, 7, 10, 11], "script": [2, 3, 4, 7, 10, 11], "minut": [2, 3, 4, 7, 10, 11], "34": 2, "825": 2, "estim": [2, 3, 4, 7, 10, 11], "memori": [2, 3, 4, 7, 10, 11], "usag": [2, 3, 4, 7, 10, 11, 29], "11937": 2, "mb": [2, 3, 4, 5, 7, 8, 10, 11], "python": [2, 3, 4, 7, 10, 11, 12, 32], "sourc": [2, 3, 4, 7, 10, 11, 12, 14, 16, 18, 19, 22, 32], "plot_custom_imputation_implement": [2, 5], "py": [2, 3, 4, 5, 7, 8, 10, 11], "jupyt": [2, 3, 4, 7, 10, 11, 12, 32], "notebook": [2, 3, 4, 7, 10, 11, 12, 32], "ipynb": [2, 3, 4, 7, 10, 11], "gener": [2, 4, 7, 9, 10, 11, 12], "sphinx": [2, 3, 4, 7, 10, 11, 12], "your": [3, 4, 7, 10, 11], "dna": [3, 4, 15, 18, 21, 22, 23, 24, 28], "calcul": [4, 11], "multipl": 4, "them": [4, 12, 18], "against": 4, "chronolog": [4, 16], "gse41169": [4, 15], "blood": [4, 6, 7, 12, 14, 15], "data_sourc": 4, "get": [4, 10, 11, 16, 18, 27, 32], "note": [4, 11], "default": [4, 18, 22, 27], "miss": [4, 19, 21, 22, 23, 24, 28], "To": [4, 32], "chang": [4, 15, 32], "behavior": [4, 32], "set": [3, 4, 15, 18, 28], "paramet": [4, 11, 18, 19, 20, 21, 22, 23, 24, 26, 27], "when": 4, "horvath_result": 4, "predict": [4, 11, 14, 16, 27], "hannum_result": 4, "hannum": [4, 14], "phenoage_result": 4, "phenoag": [4, 14], "actual_ag": 4, "plot_data": 4, "horvath": [4, 16, 32], "index": [3, 4, 11], "relplot": 4, "kind": 4, "home": 4, "longev": 4, "venv": 4, "lib": 4, "python3": 4, "10": [3, 4, 11, 32], "site": [4, 11, 20, 21, 22, 23, 24], "packag": 4, "axisgrid": 4, "123": 4, "userwarn": 4, "layout": 4, "ha": [4, 32], "tight": 4, "self": 4, "_figur": 4, "tight_layout": 4, "arg": 4, "kwarg": 4, "facetgrid": 4, "object": [4, 11, 27], "0x7f841d2c8bb0": [], "0": [3, 4, 5, 7, 10, 11, 22], "666": [], "1708": [], "plot_epigenetic_clocks_on_geo": [4, 5], "01": [8, 11], "43": [], "491": [], "auto_examples_00_epigenetic_biomark": 5, "file": [5, 8, 10, 14, 18, 19], "11936": [], "clock": [5, 6, 16, 19, 32], "00": [5, 8], "08": [], "4": [], "surviv": [6, 12, 16], "curv": [6, 12], "base": [6, 11, 12, 18, 22, 27], "us": [6, 9, 12, 15, 16, 21, 22, 23, 25, 32], "standard": [6, 12, 21], "test": [6, 12], "phenotyp": [6, 8, 12, 26], "nhane": [6, 8, 12, 16, 26], "exam": 7, "analys": [7, 16, 32], "load_nhan": 7, "year": [7, 14, 26], "df": [7, 11, 25, 26], "years_until_death": 7, "months_until_death": 7, "12": 7, "hematologi": 7, "phenotypic_ag": 7, "": [7, 19], "2": [7, 11], "ax": [3, 7], "lifelin": 7, "kaplanmeierfitt": 7, "biologically_old": 7, "subplot": 7, "group": [7, 26], "ix": 7, "t": [7, 11], "e": 7, "is_dead": 7, "kmf": 7, "fit": [7, 11], "label": 7, "plot_survival_funct": 7, "text": 7, "5": [7, 11], "23": 7, "52222222222222": 7, "136": [7, 8], "9": 7, "plot_nhan": [7, 8], "auto_examples_01_composite_biomark": 8, "If": [12, 18, 19, 22, 27, 32], "you": [10, 11, 12, 16, 32], "want": 12, "make": 12, "sure": 12, "directori": 12, "where": [11, 12, 16, 20, 25, 26], "have": [11, 12, 32], "write": 12, "permiss": 12, "copi": [12, 20], "instal": 12, "biolean": 12, "manual": 12, "follow": [10, 12], "instruct": [10, 12, 32], "auto_examples_python": 12, "zip": 12, "auto_examples_jupyt": 12, "support": [14, 15, 16, 18, 26, 27], "number": [14, 15, 26], "can": [3, 10, 14, 16, 18, 27, 32], "easili": [14, 16, 18, 32], "name": [11, 14, 27], "speci": [14, 27], "tissu": [14, 27], "coeffici": [11, 14], "2013": 14, "human": [14, 15], "multi": [14, 16], "paper": [14, 16, 32], "lin": 14, "2016": 14, "2018": 14, "horvathv2": 14, "skin": 14, "pedb": 14, "2019": 14, "buccal": 14, "zhang_10": 14, "mortal": [14, 16], "risk": 14, "dunedinpoam38": 14, "2020": 14, "rate": 14, "dunedinpac": [14, 16, 32], "2022": 14, "grimagev1": 14, "adjust": 14, "grimagev2": 14, "alcoholmccartnei": 14, "alcohol": 14, "consumpt": 14, "bmi_mccartnei": 14, "bmi": 14, "dnamtl": 14, "adipos": 14, "telomer": 14, "length": 14, "hrsinchphenoag": 14, "knight": 14, "cord": 14, "gestat": 14, "leecontrol": 14, "placenta": 14, "sexestim": 14, "2021": 14, "sex": [14, 15], "leerefinedrobust": 14, "leerobust": 14, "smokingmccartnei": 14, "smoke": 14, "statu": 14, "methyl": [15, 18, 20, 21, 22, 23, 24, 28], "id": [15, 19], "format": [10, 15, 18], "sampl": [11, 15, 20, 21, 22, 23, 24], "present": 15, "genom": [15, 20], "wide": 15, "profil": 15, "reveal": 15, "quantit": 15, "view": 15, "o": 15, "illumina450k": 15, "656": 15, "ye": 15, "gse19711": 15, "unit": 15, "kingdom": 15, "ovar": 15, "illumina27k": 15, "540": 15, "No": 15, "methylom": 15, "analysi": 15, "associ": [11, 15, 20], "me": 15, "329": 15, "gse42861": 15, "differenti": 15, "rheumatoid": 15, "arthriti": 15, "689": 15, "dutch": 15, "popul": 15, "95": 15, "gse51032": 15, "epic": 15, "itali": 15, "hugef": 15, "845": 15, "gse73103": 15, "mani": [15, 16, 32], "obes": 15, "snp": 15, "strongli": 15, "met": 15, "355": 15, "gse69270": 15, "middl": 15, "indi": 15, "184": 15, "gse36054": 15, "healthi": [3, 15], "children": 15, "192": 15, "gse64495": 15, "sever": [15, 16], "113": 15, "gse30870": 15, "newborn": 15, "nonagenarian": 15, "40": 15, "gse52588": [3, 15], "identif": 15, "signatur": [15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "87": 15, "enabl": [16, 32], "easi": [16, 32], "versatil": [16, 32], "It": [16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32], "provid": [16, 28, 32], "tool": [16, 32], "load": [16, 18, 19, 32], "publicli": [16, 32], "like": [16, 32], "gene": [16, 32], "express": [16, 32], "omnibu": [16, 32], "nation": [16, 26, 32], "health": [16, 26, 32], "nutrit": [16, 26, 32], "examim": 32, "survei": [16, 26, 32], "framingham": [16, 25, 32], "heart": [16, 25, 32], "studi": [16, 25, 32], "also": [16, 32], "contain": [16, 19, 22, 24, 32], "refer": [11, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32], "implemen": 32, "common": [16, 32], "other": [16, 22, 32], "onli": [16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32], "few": [16, 32], "line": [11, 16, 32], "financi": [], "methuselah": 16, "foundat": 16, "respect": [], "quickstart": 16, "start": [16, 32], "discov": 16, "read": [16, 32], "2024": 16, "join": [3, 16], "challeng": [10, 16], "build": [9, 12, 20, 27], "better": [], "how": [3, 10, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32], "biolog": [16, 27], "relationship": 16, "between": [11, 16], "variou": [16, 27, 28], "point": 16, "class": [17, 18, 19, 20, 27, 29, 31], "page": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "document": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32], "explain": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "pleas": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32], "user": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "guid": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "big": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "pictur": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "library_fil": 18, "none": [10, 18, 23, 24, 27], "manag": [18, 27], "collect": [18, 27], "respons": 18, "store": [11, 18], "retriev": [18, 27], "new": [18, 20], "ad": 18, "runtim": 18, "current": 18, "__init__": [18, 19, 20, 27], "initi": [18, 19, 20, 27], "instanc": [18, 19, 20, 27], "str": [3, 18, 22, 23, 24, 27], "option": [18, 22, 23, 24, 27], "path": [10, 11, 18, 19], "load_sourc": 18, "given": 18, "append": 18, "source_id": 18, "its": [18, 27], "identifi": [11, 18], "found": [18, 27], "otherwis": 18, "lookup_sourc": 18, "organ": [16, 18, 20], "look": 18, "up": 18, "specifi": [18, 27], "filter": [18, 27], "A": [18, 19, 20, 25, 26, 27], "list": [18, 22, 23, 24], "match": [18, 27], "criteria": [18, 27], "repres": [19, 20, 25, 26], "singl": 19, "encapsul": 19, "detail": [19, 32], "includ": [19, 32], "about": [16, 19, 25, 26, 32], "rais": [19, 22, 27], "valueerror": [19, 22, 27], "ani": [19, 32], "requir": [19, 22], "field": [19, 20], "parser": 19, "dure": 19, "intend": 19, "yaml": 19, "dict": [19, 27], "dictionari": [19, 27], "properti": 19, "required_field": 19, "kei": 19, "item": 19, "an": [9, 12, 18, 19, 20, 22, 24, 25, 26, 27], "pars": 19, "geograph": 19, "type": [19, 20, 21, 22, 23, 24, 25, 26, 27], "focu": 20, "facilit": 20, "access": 20, "row": [11, 20, 21, 22, 23, 24, 25, 26], "differ": 20, "column": [10, 11, 20, 21, 22, 23, 24, 25, 26], "deep": 20, "valu": [11, 21, 22, 23, 24, 28], "dataset": [21, 22, 23, 24, 28], "cpg": [11, 21, 22, 23, 24], "fill": [21, 22, 23, 24], "cpg_sourc": 22, "required_cpg": 22, "threshold": [11, 22], "below": [10, 22], "replac": [11, 22], "extern": [22, 24], "while": 22, "exist": [9, 12, 20, 22, 27], "seri": [16, 22, 24], "need": 22, "final": 22, "float": 22, "determin": [11, 22], "strategi": [22, 28], "certain": 22, "both": [11, 22], "cpgs_to_imput": [23, 24], "itself": 23, "cpg_averag": 24, "each": [11, 25, 26], "individu": [16, 25, 26], "measur": [25, 26], "examin": [16, 26], "Not": 26, "come": 26, "two": 26, "pass": 26, "should": 26, "later": 26, "input": 26, "2010": 26, "2012": 26, "model_definit": 27, "produc": 27, "search": 27, "definit": 27, "model_build": 27, "grimagemodel": 27, "bound": 27, "from_definit": 27, "linearmethylationmodel": 27, "sexestimationmodel": 27, "create_model_inst": [], "model_def": [], "imputation_method": 27, "request": [27, 32], "possibli": 27, "keyerror": 27, "invalid": 27, "modul": 28, "These": 28, "allow": 28, "simpl": [11, 28], "more": [11, 16, 28, 29, 32], "complex": 28, "hybrid": 28, "inform": 29, "prereleas": 32, "version": 32, "There": 32, "mai": 32, "bug": 32, "interfac": 32, "subject": 32, "http": [10, 11, 32], "github": 32, "com": 32, "bio": 32, "homepag": 32, "io": 32, "3": [3, 11, 32], "pip": 32, "wa": 32, "correctli": 32, "open": 32, "error": [11, 32], "check": 32, "out": 32, "some": 32, "team": 32, "answer": 32, "question": 32, "discuss": 32, "featur": [11, 32], "relat": 32, "find": 32, "we": [10, 16, 32], "replic": 32, "expect": [10, 32], "actual": [11, 32], "develop": [16, 32], "setup": 32, "repo": 32, "down": [1, 5, 11, 12, 14], "syndrom": [1, 5, 12, 14], "samepl": 3, "distiguish": 3, "test_data": 3, "downsyndrom": [3, 14], "merg": 3, "set_index": 3, "astyp": 3, "inplac": 3, "merged_data": 3, "category_ord": 3, "palett": 3, "green": 3, "red": 3, "configur": 3, "disease_st": 3, "width": 3, "order": 3, "stripplot": 3, "jitter": 3, "hue": 3, "dodg": 3, "fals": 3, "legend": 3, "set_titl": 3, "despin": 3, "save": 10, "savefig": [], "f": 11, "epigenetic_score_down_syndrom": [], "png": [], "020": [], "1009": [], "plot_down_syndrome_model": [3, 5], "0x7f30483c6f80": 4, "577": 4, "1746": 4, "14": [], "597": [], "06": 5, "000": [5, 10, 11], "competit": [9, 12, 20, 27], "train": [9, 12, 18], "elasticnet": [9, 12, 18], "warmup": [10, 11], "link": [10, 11], "here": [10, 11], "www": [10, 11], "synaps": [10, 11, 16], "org": [10, 11], "syn52966292": [10, 11], "wiki": [10, 11], "625231": [10, 11], "downloaded_data_file_path": [10, 11], "add": [10, 11], "challenge_data": [10, 11], "read_csv": [10, 11], "index_col": [10, 11], "score": 10, "best": 10, "so": 10, "let": 10, "csv": 10, "correct": 10, "now": 10, "rename_axi": 10, "sampleid": [10, 11], "renam": 10, "predictedag": [10, 11], "to_csv": 10, "lin_submiss": 10, "submit": [10, 11], "simple_competiton_submiss": 10, "narrow": 11, "what": 11, "correl": 11, "take": 11, "long": 11, "numpi": 11, "np": 11, "sklearn": 11, "linear_model": 11, "linearregress": 11, "extract": 11, "transpos": 11, "bootstrap": 11, "select": 11, "n_bootstrap": 11, "20": 11, "05": 11, "count": 11, "deem": 11, "signific": 11, "cpg_count": 11, "zero": 11, "shape": 11, "begin": 11, "iter": 11, "_": 11, "rang": 11, "sample_idx": 11, "random": 11, "choic": 11, "size": 11, "x_sampl": 11, "y_sampl": 11, "magnitud": 11, "significant_cpg": 11, "ab": 11, "coef_": 11, "stabl": 11, "stable_cpg_sit": 11, "stable_cpg_nam": 11, "tolist": 11, "than": 11, "60": 11, "model_select": 11, "train_test_split": 11, "top_sites_df": 11, "x_train": 11, "x_test": 11, "y_train": 11, "y_test": 11, "test_siz": 11, "random_st": 11, "42": 11, "alpha": 11, "regular": 11, "strength": 11, "l1_ratio": 11, "mix": 11, "l1": 11, "l2": 11, "lasso": 11, "ridg": 11, "metric": 11, "mean_squared_error": 11, "max_it": 11, "10000": 11, "evalu": 11, "y_pred": 11, "mse": 11, "squar": 11, "7": [5, 11], "edgecolor": 11, "w": 11, "linewidth": 11, "min": 11, "max": 11, "k": 11, "lw": 11, "linestyl": 11, "4f": 11, "absolut": 11, "mae": 11, "pruned_data": 11, "fillna": 11, "challenge_result": 11, "predicted_age_df": 11, "training_simple_model": 11, "implement": 16, "especi": 16, "volo": 16, "host": 16, "2025": 16, "platform": 16, "particip": 16, "ask": 16, "morbid": 16, "award": 16, "200k": 16, "submiss": [20, 27], "244": [3, 5], "1322": 3, "1321": 5, "our": [16, 32], "yingcausag": 14, "yingdamag": 14, "yingadaptag": 14}, "objects": {"biolearn": [[17, 0, 0, "-", "data_library"], [28, 0, 0, "-", "imputation"], [30, 0, 0, "-", "load"], [31, 0, 0, "-", "model_gallery"]], "biolearn.data_library": [[18, 1, 1, "", "DataLibrary"], [19, 1, 1, "", "DataSource"], [20, 1, 1, "", "GeoData"]], "biolearn.data_library.DataLibrary": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "get"], [18, 2, 1, "", "load_sources"], [18, 2, 1, "", "lookup_sources"]], "biolearn.data_library.DataSource": [[19, 3, 1, "", "REQUIRED_FIELDS"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "load"]], "biolearn.data_library.GeoData": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "copy"], [20, 3, 1, "", "dnam"], [20, 3, 1, "", "metadata"]], "biolearn.imputation": [[21, 4, 1, "", "biolearn_impute"], [22, 4, 1, "", "hybrid_impute"], [23, 4, 1, "", "impute_from_average"], [24, 4, 1, "", "impute_from_standard"]], "biolearn.load": [[25, 4, 1, "", "load_fhs"], [26, 4, 1, "", "load_nhanes"]], "biolearn.model_gallery": [[27, 1, 1, "", "ModelGallery"]], "biolearn.model_gallery.ModelGallery": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "get"], [27, 3, 1, "", "model_builders"], [27, 2, 1, "", "search"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"team": 0, "core": 0, "develop": 0, "other": [0, 14], "contributor": 0, "epigenet": [1, 3, 4, 12], "clock": [1, 2, 4, 12, 14], "exampl": [1, 6, 9, 12, 16, 18, 19, 20, 24, 26, 27], "perform": 2, "custom": 2, "imput": [2, 21, 22, 23, 24, 28], "load": [2, 3, 4, 7, 10, 11, 25, 26, 30], "methyl": [2, 3, 4], "data": [2, 3, 4, 7, 10, 11, 15, 28, 30], "from": [2, 3, 4], "geo": [2, 3, 4, 15], "dataset": [2, 4], "us": [2, 3, 4, 10, 11, 18, 19, 20, 24, 26, 27], "refer": [2, 29], "up": [2, 3, 4, 10, 11], "target": 2, "run": [2, 3, 4, 11], "now": [2, 3, 4], "predict": [2, 3, 10], "befor": 2, "after": 2, "visual": 2, "comparison": 2, "ag": [2, 4, 7, 10], "you": 2, "can": 2, "also": 2, "build": [2, 10], "an": [2, 10, 11], "decor": 2, "bundl": 2, "get": [2, 3], "same": 2, "result": [2, 4, 11], "function": 2, "directli": 2, "your": 2, "first": [3, 4], "some": [3, 4, 11], "librari": [3, 4], "three": 4, "differ": 4, "produc": 4, "final": [3, 4], "exctract": [], "metadata": 4, "plot": [3, 4, 7, 11], "seaborn": 4, "comput": [5, 8], "time": [5, 8], "composit": [6, 12], "biomark": [6, 12], "phenotyp": 7, "nhane": 7, "2010": 7, "calcul": 7, "biolog": 7, "base": 7, "phenotypicag": 7, "show": [3, 7], "relat": 7, "between": 7, "chronolog": 7, "surviv": 7, "curv": 7, "peopl": 7, "acceler": 7, "older": 7, "v": 7, "deceler": 7, "younger": 7, "model": [3, 10, 11, 14], "sourc": 15, "biolearn": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32], "featur": 16, "data_librari": [17, 18, 19, 20], "datalibrari": [17, 18], "datasourc": 19, "geodata": 20, "biolearn_imput": 21, "hybrid_imput": 22, "impute_from_averag": 23, "impute_from_standard": 24, "load_fh": 25, "load_nhan": 26, "model_galleri": [27, 31], "modelgalleri": [27, 31], "util": [28, 30], "api": 29, "quickstart": 32, "import": 32, "link": 32, "requir": 32, "instal": 32, "discord": 32, "server": 32, "issu": 32, "contribut": 32, "down": 3, "syndrom": 3, "score": 3, "gener": 3, "boxplot": 3, "power": 3, "extract": 4, "challeng": [9, 11, 12], "submiss": [9, 10, 11, 12], "competit": [10, 11], "exist": 10, "lin": 10, "train": 11, "elasticnet": 11, "seper": 11, "test": 11, "set": 11, "elast": 11, "net": 11, "see": 11, "how": 11, "good": 11, "our": 11, "i": 11, "through": 11, "save": 11, "output": 11, "file": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Team": [[0, "team"]], "Core developers": [[0, "core-developers"]], "Other contributors": [[0, "other-contributors"]], "Performing custom imputations": [[2, "performing-custom-imputations"]], "Load methylation data from a GEO dataset to use as a reference for imputation": [[2, "load-methylation-data-from-a-geo-dataset-to-use-as-a-reference-for-imputation"]], "Load up a target dataset and run the imputation": [[2, "load-up-a-target-dataset-and-run-the-imputation"]], "Now run clock predictions on the dataset before and after": [[2, "now-run-clock-predictions-on-the-dataset-before-and-after"]], "Visualize the comparison of age predictions": [[2, "visualize-the-comparison-of-age-predictions"]], "You can also build an imputation decorator to bundle with the clock": [[2, "you-can-also-build-an-imputation-decorator-to-bundle-with-the-clock"]], "You get the same results as running the function directly on your dataset": [[2, "you-get-the-same-results-as-running-the-function-directly-on-your-dataset"]], "Composite Biomarkers Examples": [[6, "composite-biomarkers-examples"], [12, "composite-biomarkers-examples"]], "\u201cPhenotypic Ages\u201d in NHANES Data": [[7, "phenotypic-ages-in-nhanes-data"]], "Loading NHANES 2010 data": [[7, "loading-nhanes-2010-data"]], "Calculate \u201cbiological age\u201d based on PhenotypicAge": [[7, "calculate-biological-age-based-on-phenotypicage"]], "Show relation between biological age and chronological age": [[7, "show-relation-between-biological-age-and-chronological-age"]], "Plot survival curve for people with accelerated aging (older biological age) vs decelerated aging (younger biological age)": [[7, "plot-survival-curve-for-people-with-accelerated-aging-older-biological-age-vs-decelerated-aging-younger-biological-age"]], "Computation times": [[8, "computation-times"], [5, "computation-times"]], "biolearn.data_library: DataLibrary": [[17, "module-biolearn.data_library"]], "biolearn.data_library.DataSource": [[19, "biolearn-data-library-datasource"]], "Examples using biolearn.data_library.DataSource": [[19, "examples-using-biolearn-data-library-datasource"]], "biolearn.load.load_fhs": [[25, "biolearn-load-load-fhs"]], "biolearn.load.load_nhanes": [[26, "biolearn-load-load-nhanes"]], "Examples using biolearn.load.load_nhanes": [[26, "examples-using-biolearn-load-load-nhanes"]], "API References": [[29, "api-references"]], "biolearn.load: Data Loading Utilities": [[30, "module-biolearn.load"]], "\u201cEpigenetic Clocks\u201d in GEO Data": [[4, "epigenetic-clocks-in-geo-data"]], "First load up some methylation data from GEO using the data library": [[4, "first-load-up-some-methylation-data-from-geo-using-the-data-library"], [3, "first-load-up-some-methylation-data-from-geo-using-the-data-library"]], "Now run three different clocks on the dataset to produce epigenetic clock ages": [[4, "now-run-three-different-clocks-on-the-dataset-to-produce-epigenetic-clock-ages"]], "Finally extract the age data from the metadata from GEO and plot the results using seaborn": [[4, "finally-extract-the-age-data-from-the-metadata-from-geo-and-plot-the-results-using-seaborn"]], "Challenge Submission Examples": [[9, "challenge-submission-examples"], [12, "challenge-submission-examples"]], "biolearn.imputation.biolearn_impute": [[21, "biolearn-imputation-biolearn-impute"]], "biolearn.imputation.hybrid_impute": [[22, "biolearn-imputation-hybrid-impute"]], "biolearn.imputation.impute_from_average": [[23, "biolearn-imputation-impute-from-average"]], "biolearn.imputation.impute_from_standard": [[24, "biolearn-imputation-impute-from-standard"]], "Examples using biolearn.imputation.impute_from_standard": [[24, "examples-using-biolearn-imputation-impute-from-standard"]], "biolearn.imputation: Data Imputation Utilities": [[28, "biolearn-imputation-data-imputation-utilities"]], "biolearn.model_gallery: ModelGallery": [[31, "biolearn-model-gallery-modelgallery"]], "Epigenetic Clock Examples": [[1, "epigenetic-clock-examples"], [12, "epigenetic-clock-examples"]], "Down Syndrome Epigenetic Plotting": [[3, "down-syndrome-epigenetic-plotting"]], "Now run the down syndrome model on the data to get a score": [[3, "now-run-the-down-syndrome-model-on-the-data-to-get-a-score"]], "Finally generate a boxplot to show the predictive power": [[3, "finally-generate-a-boxplot-to-show-the-predictive-power"]], "Examples": [[12, "examples"]], "biolearn.data_library.DataLibrary": [[18, "biolearn-data-library-datalibrary"]], "Examples using biolearn.data_library.DataLibrary": [[18, "examples-using-biolearn-data-library-datalibrary"]], "biolearn.data_library.GeoData": [[20, "biolearn-data-library-geodata"]], "Examples using biolearn.data_library.GeoData": [[20, "examples-using-biolearn-data-library-geodata"]], "biolearn.model_gallery.ModelGallery": [[27, "biolearn-model-gallery-modelgallery"]], "Examples using biolearn.model_gallery.ModelGallery": [[27, "examples-using-biolearn-model-gallery-modelgallery"]], "Building a competition submission using an existing model": [[10, "building-a-competition-submission-using-an-existing-model"]], "Loading up the data for the competition": [[10, "loading-up-the-data-for-the-competition"], [11, "loading-up-the-data-for-the-competition"]], "Use the Lin model to predict the age": [[10, "use-the-lin-model-to-predict-the-age"]], "Training an ElasticNet model": [[11, "training-an-elasticnet-model"]], "Load up some training data": [[11, "load-up-some-training-data"]], "Seperate data into training and test sets": [[11, "seperate-data-into-training-and-test-sets"]], "Train a model using elastic net": [[11, "train-a-model-using-elastic-net"]], "Plot the results to see how good our model is": [[11, "plot-the-results-to-see-how-good-our-model-is"]], "Run the challenge data through the model": [[11, "run-the-challenge-data-through-the-model"]], "Save the results as an output file for submission": [[11, "save-the-results-as-an-output-file-for-submission"]], "Biolearn": [[16, "biolearn"], [32, "biolearn"]], "Featured examples": [[16, "featured-examples"]], "Quickstart": [[32, "quickstart"]], "Important links": [[32, "important-links"]], "Requirements": [[32, "requirements"]], "Install": [[32, "install"]], "Discord server": [[32, "discord-server"]], "Issues": [[32, "issues"]], "Contributing": [[32, "contributing"]], "Clocks and Other Models": [[14, "clocks-and-other-models"]], "GEO Data Sources": [[15, "geo-data-sources"]]}, "indexentries": {"biolearn.data_library": [[17, "module-biolearn.data_library"]], "module": [[17, "module-biolearn.data_library"], [28, "module-biolearn.imputation"], [30, "module-biolearn.load"], [31, "module-biolearn.model_gallery"]], "datalibrary (class in biolearn.data_library)": [[18, "biolearn.data_library.DataLibrary"]], "__init__() (biolearn.data_library.datalibrary method)": [[18, "biolearn.data_library.DataLibrary.__init__"]], "get() (biolearn.data_library.datalibrary method)": [[18, "biolearn.data_library.DataLibrary.get"]], "load_sources() (biolearn.data_library.datalibrary method)": [[18, "biolearn.data_library.DataLibrary.load_sources"]], "lookup_sources() (biolearn.data_library.datalibrary method)": [[18, "biolearn.data_library.DataLibrary.lookup_sources"]], "datasource (class in biolearn.data_library)": [[19, "biolearn.data_library.DataSource"]], "required_fields (biolearn.data_library.datasource attribute)": [[19, "biolearn.data_library.DataSource.REQUIRED_FIELDS"]], "__init__() (biolearn.data_library.datasource method)": [[19, "biolearn.data_library.DataSource.__init__"]], "load() (biolearn.data_library.datasource method)": [[19, "biolearn.data_library.DataSource.load"]], "geodata (class in biolearn.data_library)": [[20, "biolearn.data_library.GeoData"]], "__init__() (biolearn.data_library.geodata method)": [[20, "biolearn.data_library.GeoData.__init__"]], "copy() (biolearn.data_library.geodata method)": [[20, "biolearn.data_library.GeoData.copy"]], "dnam (biolearn.data_library.geodata attribute)": [[20, "biolearn.data_library.GeoData.dnam"]], "metadata (biolearn.data_library.geodata attribute)": [[20, "biolearn.data_library.GeoData.metadata"]], "biolearn_impute() (in module biolearn.imputation)": [[21, "biolearn.imputation.biolearn_impute"]], "hybrid_impute() (in module biolearn.imputation)": [[22, "biolearn.imputation.hybrid_impute"]], "impute_from_average() (in module biolearn.imputation)": [[23, "biolearn.imputation.impute_from_average"]], "impute_from_standard() (in module biolearn.imputation)": [[24, "biolearn.imputation.impute_from_standard"]], "load_fhs() (in module biolearn.load)": [[25, "biolearn.load.load_fhs"]], "load_nhanes() (in module biolearn.load)": [[26, "biolearn.load.load_nhanes"]], "modelgallery (class in biolearn.model_gallery)": [[27, "biolearn.model_gallery.ModelGallery"]], "__init__() (biolearn.model_gallery.modelgallery method)": [[27, "biolearn.model_gallery.ModelGallery.__init__"]], "get() (biolearn.model_gallery.modelgallery method)": [[27, "biolearn.model_gallery.ModelGallery.get"]], "model_builders (biolearn.model_gallery.modelgallery attribute)": [[27, "biolearn.model_gallery.ModelGallery.model_builders"]], "search() (biolearn.model_gallery.modelgallery method)": [[27, "biolearn.model_gallery.ModelGallery.search"]], "biolearn.imputation": [[28, "module-biolearn.imputation"]], "biolearn.load": [[30, "module-biolearn.load"]], "biolearn.model_gallery": [[31, "module-biolearn.model_gallery"]]}})