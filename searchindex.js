Search.setIndex({"docnames": ["authors", "auto_examples/00_omics_biomarkers/index", "auto_examples/00_omics_biomarkers/plot_custom_imputation_implementation", "auto_examples/00_omics_biomarkers/plot_down_syndrome_model", "auto_examples/00_omics_biomarkers/plot_epigenetic_clocks_on_geo", "auto_examples/00_omics_biomarkers/plot_transcriptomic_clock", "auto_examples/00_omics_biomarkers/sg_execution_times", "auto_examples/01_composite_biomarkers/index", "auto_examples/01_composite_biomarkers/plot_nhanes", "auto_examples/01_composite_biomarkers/sg_execution_times", "auto_examples/02_challenge_submissions/index", "auto_examples/02_challenge_submissions/sg_execution_times", "auto_examples/02_challenge_submissions/simple_competiton_submission", "auto_examples/02_challenge_submissions/training_simple_model", "auto_examples/03_deconvolution/index", "auto_examples/03_deconvolution/plot_blood_deconvolution", "auto_examples/03_deconvolution/sg_execution_times", "auto_examples/index", "auto_examples/sg_execution_times", "changes/names", "clocks", "data", "index", "modules/cache", "modules/data_library", "modules/generated/biolearn.cache.LocalFolderCache", "modules/generated/biolearn.cache.NoCache", "modules/generated/biolearn.data_library.DataLibrary", "modules/generated/biolearn.data_library.DataSource", "modules/generated/biolearn.data_library.GeoData", "modules/generated/biolearn.imputation.hybrid_impute", "modules/generated/biolearn.imputation.impute_from_average", "modules/generated/biolearn.imputation.impute_from_standard", "modules/generated/biolearn.load.load_fhs", "modules/generated/biolearn.load.load_nhanes", "modules/generated/biolearn.model_gallery.ModelGallery", "modules/imputation", "modules/index", "modules/load", "modules/model_gallery", "quickstart", "roadmap", "sg_execution_times"], "filenames": ["authors.rst", "auto_examples/00_omics_biomarkers/index.rst", "auto_examples/00_omics_biomarkers/plot_custom_imputation_implementation.rst", "auto_examples/00_omics_biomarkers/plot_down_syndrome_model.rst", "auto_examples/00_omics_biomarkers/plot_epigenetic_clocks_on_geo.rst", "auto_examples/00_omics_biomarkers/plot_transcriptomic_clock.rst", "auto_examples/00_omics_biomarkers/sg_execution_times.rst", "auto_examples/01_composite_biomarkers/index.rst", "auto_examples/01_composite_biomarkers/plot_nhanes.rst", "auto_examples/01_composite_biomarkers/sg_execution_times.rst", "auto_examples/02_challenge_submissions/index.rst", "auto_examples/02_challenge_submissions/sg_execution_times.rst", "auto_examples/02_challenge_submissions/simple_competiton_submission.rst", "auto_examples/02_challenge_submissions/training_simple_model.rst", "auto_examples/03_deconvolution/index.rst", "auto_examples/03_deconvolution/plot_blood_deconvolution.rst", "auto_examples/03_deconvolution/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "changes/names.rst", "clocks.rst", "data.rst", "index.rst", "modules/cache.rst", "modules/data_library.rst", "modules/generated/biolearn.cache.LocalFolderCache.rst", "modules/generated/biolearn.cache.NoCache.rst", "modules/generated/biolearn.data_library.DataLibrary.rst", "modules/generated/biolearn.data_library.DataSource.rst", "modules/generated/biolearn.data_library.GeoData.rst", "modules/generated/biolearn.imputation.hybrid_impute.rst", "modules/generated/biolearn.imputation.impute_from_average.rst", "modules/generated/biolearn.imputation.impute_from_standard.rst", "modules/generated/biolearn.load.load_fhs.rst", "modules/generated/biolearn.load.load_nhanes.rst", "modules/generated/biolearn.model_gallery.ModelGallery.rst", "modules/imputation.rst", "modules/index.rst", "modules/load.rst", "modules/model_gallery.rst", "quickstart.md", "roadmap.rst", "sg_execution_times.rst"], "titles": ["Team", "Omics Biomarker Examples", "Performing custom imputations", "Down Syndrome Epigenetic Plotting", "\u201cEpigenetic Clocks\u201d in GEO Data", "\u201cTranscriptomic Clock\u201d using GEO Data", "Computation times", "Composite Biomarkers Examples", "\u201cPhenotypic Ages\u201d in NHANES Data", "Computation times", "Challenge Submission Examples", "Computation times", "Building a competition submission using an existing model", "Training an ElasticNet model", "Deconvolution Examples", "\u201cDeconvolution Example\u201d", "Computation times", "Examples", "Computation times", "&lt;no title&gt;", "Clocks and Other Models", "GEO Data Sources", "Biolearn", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.cache</span></code>: Cache", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.data_library</span></code>: DataLibrary", "biolearn.cache.LocalFolderCache", "biolearn.cache.NoCache", "biolearn.data_library.DataLibrary", "biolearn.data_library.DataSource", "biolearn.data_library.GeoData", "biolearn.imputation.hybrid_impute", "biolearn.imputation.impute_from_average", "biolearn.imputation.impute_from_standard", "biolearn.load.load_fhs", "biolearn.load.load_nhanes", "biolearn.model_gallery.ModelGallery", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.imputation</span></code>: Data Imputation Utilities", "API References", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.load</span></code>: Data Loading Utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.model_gallery</span></code>: ModelGallery", "Quickstart", "Biolearn and the Future of Biomarkers", "Computation times"], "terms": {"thi": [0, 2, 3, 4, 5, 8, 12, 13, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41], "work": [0, 41], "i": [0, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41], "made": [0, 41], "avail": [0, 22, 35, 40, 41], "commun": [0, 12], "peopl": 0, "which": [0, 13, 25, 26, 29, 34], "origin": [0, 2], "from": [0, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42], "biomark": [0, 10, 21, 22, 27, 40], "ag": [0, 7, 9, 10, 13, 17, 20, 21, 22, 34, 40, 41, 42], "consortium": [0, 22], "The": [0, 25, 26, 27, 35, 40, 41], "biolearn": [0, 2, 3, 4, 5, 8, 12, 13, 15, 20, 21, 37], "ar": [0, 2, 13, 22, 27, 28, 29, 30, 34, 35, 40, 41], "mahdi": 0, "moqri": [0, 22], "research": [0, 22, 27, 41], "boa": 0, "execut": [0, 6, 9, 11, 16, 17, 18, 40, 42], "martin": 0, "perez": [0, 22], "guevara": [0, 22], "machin": 0, "learn": [0, 22, 40, 41], "engin": 0, "seth": 0, "paulson": [0, 22], "softwar": 0, "architect": 0, "albert": 0, "ying": [0, 22], "harvard": 0, "universii": 0, "dayoon": 0, "kwon": [0, 22], "univers": 0, "california": 0, "special": 0, "thank": 0, "scientif": 0, "member": 0, "plot": [1, 2, 6, 7, 14, 17, 22, 42], "result": [1, 3, 12, 14, 17], "run": [1, 8, 12, 14, 15, 17, 20, 22, 35, 40], "base": [1, 7, 13, 17, 27, 30, 35], "model": [1, 2, 5, 10, 11, 17, 27, 35, 41, 42], "function": [1, 17, 28, 30, 31, 32, 33, 34, 36, 37, 38], "includ": [1, 17, 28, 29, 40, 41], "methyl": [1, 17, 21, 27, 29, 30, 31, 32, 36, 41], "transcriptom": [1, 6, 17, 29, 42], "data": [1, 6, 7, 9, 15, 17, 22, 25, 27, 28, 29, 30, 33, 34, 35, 40, 41, 42], "epigenet": [1, 2, 6, 17, 21, 22, 28, 41, 42], "clock": [1, 6, 7, 17, 22, 28, 29, 40, 42], "geo": [1, 6, 17, 27, 28, 29, 41, 42], "down": [1, 6, 13, 17, 20, 42], "syndrom": [1, 6, 17, 20, 42], "us": [1, 6, 7, 10, 11, 17, 21, 22, 25, 26, 30, 31, 33, 40, 41, 42], "perform": [1, 6, 8, 17, 32, 42], "custom": [1, 6, 17, 32, 42], "imput": [1, 4, 6, 17, 35, 42], "go": [2, 3, 4, 5, 8, 12, 13, 15], "end": [2, 3, 4, 5, 8, 12, 13, 15], "download": [2, 3, 4, 5, 8, 12, 13, 15, 17], "full": [2, 3, 4, 5, 8, 12, 13, 15], "exampl": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 16, 18, 40, 42], "code": [2, 3, 4, 5, 8, 12, 13, 15, 17, 22, 40, 41], "browser": [2, 3, 4, 5, 8, 12, 13, 15], "via": [2, 3, 4, 5, 8, 12, 13, 15, 41], "binder": [2, 3, 4, 5, 8, 12, 13, 15], "demonstr": [2, 22], "eas": 2, "librari": [2, 21, 22, 27, 35, 40, 41], "data_librari": [2, 3, 4, 5, 12, 13, 15, 40], "import": [2, 3, 4, 5, 8, 12, 13, 15], "datalibrari": [2, 3, 4, 5, 13, 15, 28, 40], "geodata": [2, 12, 13, 28], "comput": [2, 22], "averag": [2, 30, 31, 32, 35, 36], "reference_dataset": 2, "gse40279": [2, 13, 21], "reference_averag": 2, "dnam": [2, 4, 13, 29, 30, 31, 32], "mean": [2, 13], "axi": 2, "1": [2, 5, 9, 13, 15, 16, 41], "second": [2, 3, 4, 5, 8, 15], "target_dataset": 2, "gse51057": [2, 21], "impute_from_standard": 2, "imputed_data": 2, "imputed_dataset": 2, "metadata": [2, 3, 5, 13, 15, 28, 29], "galleri": [2, 3, 4, 5, 8, 12, 13, 15, 17, 20, 42], "compar": [2, 22], "model_galleri": [2, 3, 4, 5, 12, 15], "modelgalleri": [2, 3, 4, 5, 12, 15], "clock_model": 2, "horvathv1": [2, 4, 20], "original_age_predict": 2, "imputed_age_predict": 2, "seaborn": [2, 3, 8, 15], "sn": [2, 3, 4, 5, 8, 15], "panda": [2, 4, 13, 29, 33, 34], "pd": [2, 4, 13, 30, 31, 32], "matplotlib": [2, 3, 5, 8, 13, 15], "pyplot": [2, 3, 5, 8, 13, 15], "plt": [2, 3, 5, 8, 13, 15], "prepar": [2, 41], "comparison_data": 2, "datafram": [2, 4, 13, 29, 30, 31, 32, 33, 34], "creat": [2, 3, 29, 40], "scatter": [2, 4, 13], "figur": [2, 3, 13, 15], "figsiz": [2, 3, 13, 15], "8": [2, 13, 30, 42], "6": [2, 3, 13, 21], "scatterplot": [2, 8, 15], "x": [2, 3, 5, 8, 13, 15], "y": [2, 3, 5, 8, 13, 15], "titl": [2, 3, 5, 13, 15, 21, 28], "v": [2, 13, 22, 40], "xlabel": [2, 5, 8, 13, 15], "ylabel": [2, 5, 8, 13, 15], "grid": [2, 13], "true": [2, 3, 13], "show": [2, 5, 12, 13, 22], "imputationdecor": 2, "defin": [2, 13, 27], "method": [2, 28, 35, 36], "def": 2, "custom_impute_method": 2, "dnam_data": 2, "needed_cpg": 2, "return": [2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "wrap": 2, "decorated_clock": 2, "decorated_clock_predict": 2, "verifi": [2, 40], "direct": 2, "approach": [2, 41], "same_result": 2, "all": [2, 17, 25, 26, 27, 29, 31, 32, 42], "print": [2, 5, 13], "total": [2, 3, 4, 5, 6, 8, 9, 11, 15, 16, 18, 20, 22, 42], "time": [2, 3, 4, 5, 8, 13, 15, 41], "script": [2, 3, 4, 5, 8, 15], "0": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 18, 30, 42], "minut": [2, 3, 4, 5, 8, 15, 41], "21": 2, "760": 2, "estim": [2, 3, 4, 5, 8, 12, 13], "memori": [2, 3, 4, 5, 8, 12, 13, 15, 21], "usag": [2, 3, 4, 5, 8, 12, 13, 15], "9865": 2, "mb": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 18, 42], "jupyt": [2, 3, 4, 5, 8, 12, 13, 15, 17, 40], "notebook": [2, 3, 4, 5, 8, 12, 13, 15, 17, 40], "plot_custom_imputation_implement": [2, 6, 42], "ipynb": [2, 3, 4, 5, 8, 12, 13, 15], "python": [2, 3, 4, 5, 8, 12, 13, 15, 17, 40], "sourc": [2, 3, 4, 5, 8, 12, 13, 15, 17, 20, 22, 27, 28, 30, 40, 41], "py": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 42], "gener": [2, 4, 5, 8, 10, 12, 13, 15, 17, 29, 41], "sphinx": [2, 3, 4, 5, 8, 12, 13, 15, 17], "your": [3, 4, 5, 8, 12, 13, 15, 22, 41], "dna": [3, 4, 15, 20, 21, 27, 30, 31, 32, 36], "how": [3, 12, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41], "samepl": 3, "can": [3, 12, 20, 22, 27, 29, 35, 40, 41], "distiguish": 3, "test_data": 3, "gse52588": [3, 21], "downsyndrom": [3, 20], "set": [3, 4, 21, 27, 28, 35, 36], "index": [3, 4, 13], "merg": 3, "set_index": 3, "astyp": [3, 15], "str": [3, 25, 26, 27, 29, 30, 31, 32, 35], "inplac": 3, "merged_data": 3, "join": [3, 22], "category_ord": 3, "healthi": [3, 21], "palett": 3, "green": 3, "red": 3, "configur": [3, 28, 41], "10": [3, 13, 22, 40], "ax": [3, 8], "disease_st": 3, "width": 3, "3": [3, 6, 13, 40, 42], "order": 3, "stripplot": 3, "jitter": 3, "hue": 3, "dodg": 3, "fals": 3, "legend": [3, 15], "set_titl": 3, "despin": 3, "644": 3, "982": 3, "plot_down_syndrome_model": [3, 6, 42], "calcul": [4, 5, 13, 35], "multipl": 4, "them": [4, 15, 17, 27, 41], "against": 4, "chronolog": [4, 22], "gse41169": [4, 21], "blood": [4, 7, 8, 17, 20, 21, 41], "data_sourc": 4, "get": [4, 5, 12, 13, 15, 22, 25, 26, 27, 35, 40], "note": [4, 13], "default": [4, 27, 28, 30, 35], "miss": [4, 26, 28, 29, 30, 31, 32, 35, 36], "To": [4, 40], "chang": [4, 21, 40], "behavior": [4, 40], "paramet": [4, 13, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35], "when": 4, "horvath_result": 4, "predict": [4, 13, 15, 20, 22, 35], "hannum_result": 4, "hannum": [4, 20], "phenoage_result": 4, "phenoag": [4, 20], "actual_ag": 4, "plot_data": 4, "horvath": [4, 22, 40], "relplot": 4, "kind": 4, "axisgrid": 4, "facetgrid": 4, "object": [4, 13, 25, 27, 28, 29, 35], "0x724f34ea4970": 4, "2": [4, 8, 11, 13], "999": 4, "1704": 4, "plot_epigenetic_clocks_on_geo": [4, 6, 42], "gse134080": [5, 21], "rna_model": 5, "transcriptomicpredictionmodel": [5, 20], "imputation_method": [5, 35], "none": [5, 25, 26, 27, 28, 29, 31, 32, 35], "traceback": [], "most": [], "recent": 25, "call": [], "last": [], "file": [6, 9, 11, 12, 16, 18, 20, 27, 28, 29, 41, 42], "home": [], "longev": [], "00_omics_biomark": [6, 42], "plot_transcriptomic_clock": [5, 6, 42], "line": [13, 22, 40], "23": 8, "modul": [27, 28, 36], "661": [], "matrix_data": [], "self": [], "preprocess": [], "473": [], "lambda": [], "map_ensembl_to_gen": [], "rna_data": [], "508": [], "new_rna_matrix": [], "rna_matrix": [], "renam": 12, "id_to_gene_map": [], "attributeerror": [], "nonetyp": [], "ha": [40, 41], "attribut": 28, "sklearn": 13, "metric": 13, "mean_absolute_error": [], "mean_squared_error": 13, "assum": [], "alreadi": [], "have": [13, 17, 40, 41], "ident": [], "row": [13, 29, 30, 31, 32, 33, 34], "indic": [], "extract": [13, 41], "relev": [], "column": [12, 13, 29, 30, 31, 32, 33, 34], "predicted_valu": 5, "true_valu": 5, "mae": 13, "mse": 13, "f": [5, 13], "absolut": 13, "error": [13, 25, 40], "squar": 13, "alpha": [5, 13], "5": [5, 8, 13, 15, 16], "set_them": 5, "style": 5, "whitegrid": 5, "comparison": [], "valu": [13, 25, 26, 30, 31, 32, 35, 36], "102": [], "270": [], "00": [6, 9, 11, 16, 18, 42], "25": 41, "504": [], "4": 6, "auto_exampl": [6, 9, 11, 16, 18], "mem": [6, 9, 11, 16, 18, 42], "9864": [], "02": 22, "1703": [], "7": 13, "981": [], "surviv": [7, 17, 22], "curv": [7, 17], "standard": [7, 17, 35], "test": [7, 17, 41], "phenotyp": [7, 9, 17, 34, 42], "nhane": [7, 9, 17, 22, 34, 42], "exam": 8, "analys": [8, 22, 40], "load_nhan": 8, "year": [8, 20, 34], "df": [8, 13, 33, 34], "years_until_death": 8, "months_until_death": 8, "12": [8, 21, 22], "hematologi": 8, "phenotypic_ag": 8, "": [8, 20, 22, 28, 35, 41], "lifelin": 8, "kaplanmeierfitt": 8, "biologically_old": 8, "subplot": 8, "group": [8, 34], "ix": 8, "t": [8, 13, 15], "e": 8, "is_dead": 8, "kmf": 8, "fit": [8, 13], "label": 8, "plot_survival_funct": 8, "text": [8, 15], "52222222222222": 8, "621": [8, 9], "9": [8, 9], "plot_nhan": [8, 9, 42], "01_composite_biomark": [9, 42], "build": [10, 11, 17, 35, 41, 42], "competit": [10, 11, 17, 35, 42], "an": [10, 11, 17, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 41, 42], "exist": [10, 11, 17, 25, 30, 35, 42], "train": [10, 11, 17, 27, 42], "elasticnet": [10, 11, 17, 27, 42], "000": [6, 11, 18, 42], "02_challenge_submiss": [11, 42], "submiss": [11, 35, 42], "simple_competiton_submiss": [11, 12, 42], "training_simple_model": [11, 13, 42], "you": [12, 13, 17, 22, 40, 41], "warmup": [12, 13], "challeng": [12, 21, 22, 41], "link": [12, 13], "here": [12, 13], "http": [12, 13, 22, 40], "www": [12, 13], "synaps": [12, 13, 22], "org": [12, 13, 22], "syn52966292": [12, 13], "wiki": [12, 13], "625231": [12, 13], "downloaded_data_file_path": [12, 13], "add": [12, 13], "path": [12, 13, 25, 27, 28, 29, 41], "challenge_data": [12, 13], "from_methylation_matrix": [12, 13, 29], "score": 12, "best": 12, "so": 12, "let": 12, "save": 12, "csv": [12, 29], "correct": 12, "format": [12, 21, 27, 28, 41], "now": [12, 41], "we": [12, 22, 40, 41], "expect": [12, 40], "rename_axi": 12, "sampleid": [12, 13], "predictedag": [12, 13], "to_csv": 12, "lin_submiss": 12, "submit": [12, 13], "follow": [12, 17], "instruct": [12, 17, 40], "below": [12, 30], "simpl": [13, 36], "narrow": 13, "what": 13, "site": [13, 29, 30, 31, 32], "correl": [5, 13], "take": [13, 41], "long": 13, "numpi": 13, "np": 13, "linear_model": 13, "linearregress": 13, "transpos": 13, "sampl": [13, 21, 29, 30, 31, 32, 41], "cpg": [13, 15, 30, 31, 32], "bootstrap": 13, "featur": [13, 40], "select": [13, 35], "n_bootstrap": 13, "20": 13, "threshold": [13, 30], "05": 13, "store": [13, 21, 25, 26, 27], "count": 13, "each": [13, 29, 33, 34], "deem": 13, "signific": 13, "cpg_count": 13, "zero": 13, "shape": 13, "begin": 13, "iter": 13, "_": [5, 13], "rang": 13, "replac": [13, 30], "sample_idx": 13, "random": 13, "choic": 13, "size": [13, 25], "x_sampl": 13, "y_sampl": 13, "identifi": [13, 27, 29, 41], "magnitud": [13, 41], "coeffici": [5, 13, 20], "significant_cpg": 13, "where": [13, 17, 22, 29, 33, 34, 41], "ab": 13, "coef_": 13, "determin": [13, 30], "stabl": 13, "stable_cpg_sit": 13, "stable_cpg_nam": 13, "tolist": 13, "associ": [13, 21, 29], "more": [13, 22, 36, 40, 41], "than": 13, "60": 13, "model_select": 13, "train_test_split": 13, "top_sites_df": 13, "x_train": 13, "x_test": 13, "y_train": 13, "y_test": 13, "test_siz": 13, "random_st": 13, "42": 13, "regular": 13, "strength": 13, "l1_ratio": 13, "mix": 13, "between": [13, 22], "l1": 13, "l2": 13, "lasso": 13, "ridg": 13, "01": [6, 13, 42], "max_it": 13, "10000": 13, "evalu": 13, "y_pred": 13, "edgecolor": 13, "w": 13, "linewidth": 13, "min": 13, "max": 13, "k": [13, 22], "lw": 13, "refer": [13, 15, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40], "actual": [13, 40], "both": [13, 29, 30, 41], "linestyl": 13, "4f": 13, "pruned_data": 13, "fillna": 13, "challenge_result": 13, "predicted_age_df": 13, "name": [13, 20, 35], "dataset": [14, 17, 21, 30, 31, 32, 35, 36, 41], "known": [14, 17], "cell": [14, 17, 20, 21], "proport": [14, 17, 20], "type": [15, 21, 25, 26, 29, 30, 31, 32, 33, 34, 35], "epic_facs_salas_18": 15, "gse112618": [15, 21], "epic_facs_cell_prop": 15, "deconvolutebloodep": [15, 20], "number": [15, 20, 21, 34], "600": 15, "intersect": 15, "complet": 15, "set_styl": 15, "tick": 15, "neutrophils_proport": 15, "float": [15, 25, 30], "loc": 15, "neutrophil": 15, "monocytes_proport": 15, "monocyt": 15, "nk_proport": 15, "nk_cell": 15, "bcell_proport": 15, "b_cell": 15, "cd4t_proport": 15, "cd4_t_cell": 15, "cd8t_proport": 15, "cd8_t_cell": 15, "nk": 15, "b": 15, "cd4": 15, "cd8": 15, "valid": [15, 21], "562": [15, 16], "118": 15, "plot_blood_deconvolut": [15, 16, 42], "03_deconvolut": [16, 42], "deconvolut": [16, 42], "117": 16, "If": [17, 22, 27, 28, 29, 30, 35, 40, 41], "want": [17, 41], "make": 17, "sure": 17, "directori": [17, 25], "write": [17, 41], "permiss": 17, "copi": [17, 29], "instal": 17, "biolean": 17, "manual": 17, "auto_examples_python": 17, "zip": 17, "auto_examples_jupyt": 17, "n": [18, 22], "A": [18, 25, 26, 27, 28, 29, 33, 34, 35], "support": [20, 21, 22, 27, 34, 35, 41], "easili": [20, 22, 27, 40], "speci": [20, 35], "tissu": [20, 35], "2013": 20, "human": [20, 21, 41], "multi": [20, 22, 41], "paper": [20, 22, 40], "lin": 20, "2016": 20, "2018": 20, "yingcausag": 20, "2022": 20, "yingdamag": 20, "yingadaptag": 20, "horvathv2": 20, "skin": 20, "pedb": 20, "2019": 20, "buccal": 20, "zhang_10": 20, "mortal": [20, 22], "risk": 20, "dunedinpoam38": 20, "2020": 20, "rate": 20, "dunedinpac": [20, 22, 35, 40], "grimagev1": 20, "adjust": 20, "grimagev2": 20, "alcoholmccartnei": 20, "alcohol": 20, "consumpt": 20, "bmi_mccartnei": 20, "bmi": 20, "dnamtl": 20, "adipos": 20, "telomer": 20, "length": 20, "hrsinchphenoag": 20, "knight": 20, "cord": [20, 21], "gestat": 20, "leecontrol": 20, "placenta": 20, "sexestim": 20, "2021": 20, "sex": [20, 21], "leerefinedrobust": 20, "leerobust": 20, "smokingmccartnei": 20, "smoke": 20, "statu": 20, "deconvoluteblood450k": 20, "2024": [20, 21, 22], "educationmccartnei": 20, "educ": 20, "attain": 20, "totalcholesterolmccartnei": 20, "cholesterol": 20, "hdlcholesterolmccartnei": 20, "hdl": 20, "ldlcholesterolmccartnei": 20, "ldl": 20, "remnant": 20, "bodyfatmccartnei": 20, "percentag": [20, 29], "bodi": 20, "fat": 20, "bmi_re": 20, "prostatecancerkirbi": 20, "2017": 20, "prostat": 20, "cancer": 20, "hepatoxu": 20, "circul": 20, "hepatocellular": 20, "carcinoma": 20, "cvd_westerman": 20, "coronari": 20, "heart": [20, 22, 33, 40], "diseas": [20, 41], "ad_bahado": 20, "singh": 20, "alzheim": 20, "depressionbarbu": 20, "depress": 20, "2015": 20, "id": [21, 28], "present": 21, "fac": 21, "optim": [21, 41], "unknown": [], "ye": 21, "gse110554": 21, "flowsort": 21, "epic": 21, "ba": 21, "49": 21, "genom": [21, 29], "wide": 21, "profil": 21, "reveal": 21, "quantit": 21, "view": 21, "o": 21, "illumina450k": 21, "656": 21, "gse19711": 21, "unit": 21, "kingdom": 21, "ovar": 21, "illumina27k": 21, "540": 21, "No": [21, 35], "methylom": 21, "analysi": 21, "me": 21, "329": 21, "gse42861": 21, "differenti": 21, "rheumatoid": 21, "arthriti": 21, "689": 21, "dutch": 21, "popul": 21, "95": 21, "gse51032": 21, "itali": 21, "hugef": 21, "845": 21, "gse73103": 21, "mani": [21, 22, 40, 41], "obes": 21, "snp": 21, "strongli": 21, "met": 21, "355": 21, "gse69270": 21, "middl": 21, "indi": 21, "184": 21, "gse36054": 21, "children": 21, "192": 21, "gse64495": 21, "sever": [21, 22], "113": 21, "gse30870": 21, "newborn": 21, "nonagenarian": 21, "40": 21, "identif": 21, "signatur": [21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "87": 21, "gse157131": 21, "peripher": 21, "leukocyt": 21, "fro": 21, "illuminaep": 21, "946": 21, "gse132203": 21, "gradi": 21, "trauma": 21, "project": 21, "795": 21, "rnaseq": 21, "whole": 21, "500fg": 21, "cohort": 21, "illuminahiseq2500": 21, "100": 21, "enabl": [22, 40], "easi": [22, 40, 41], "versatil": [22, 40], "It": [22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40], "provid": [22, 28, 36, 40, 41], "tool": [22, 40, 41], "load": [22, 27, 28, 29, 40, 41], "publicli": [22, 40], "like": [22, 28, 40, 41], "gene": [22, 40], "express": [22, 40], "omnibu": [22, 40], "nation": [22, 34, 40], "health": [22, 34, 40, 41], "nutrit": [22, 34, 40], "examin": [22, 34], "survei": [22, 34, 40], "framingham": [22, 33, 40], "studi": [22, 33, 40], "also": [22, 40, 41], "contain": [22, 28, 29, 30, 32, 40], "implement": [22, 25, 26, 41], "common": [22, 40], "other": [22, 30, 40], "onli": [22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40], "few": [22, 40], "read": [22, 40], "about": [22, 28, 33, 34, 40, 41], "our": [22, 40, 41], "develop": [22, 40, 41], "organ": [22, 27, 28, 29], "individu": [22, 33, 34], "especi": 22, "methuselah": 22, "foundat": 22, "volo": 22, "host": 22, "2025": 22, "seri": [22, 30, 32], "platform": 22, "particip": 22, "ask": 22, "morbid": 22, "award": 22, "200k": 22, "pleas": [22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41], "cite": 22, "preprint": 22, "m": 22, "emamifar": 22, "mart\u00ed": 22, "nez": 22, "c": 22, "d": 22, "poganik": 22, "j": 22, "r": 22, "gladyshev": 22, "2023": 22, "open": [22, 40, 41], "biorxiv": 22, "doi": 22, "1101": 22, "569722": 22, "quickstart": 22, "start": [22, 40], "roadmap": [22, 41], "see": [22, 41], "head": 22, "contribut": [22, 41], "biolog": [22, 35], "relationship": 22, "variou": [22, 35, 36], "point": 22, "class": [23, 24, 25, 26, 27, 28, 29, 35, 37, 39], "page": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "document": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40], "explain": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "user": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "guid": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "big": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41], "pictur": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "max_size_gb": 25, "serial": 25, "local": 25, "basic": 25, "lru": 25, "least": 25, "cleanup": 25, "maintain": [25, 41], "within": [25, 35], "specifi": [25, 27, 29, 35], "maximum": 25, "limit": 25, "__init__": [25, 26, 27, 28, 29, 35], "initi": [25, 27, 28, 29, 35], "instanc": [25, 27, 28, 29, 35], "filesystem": 25, "storag": 25, "gigabyt": 25, "kei": [25, 26, 28], "retriev": [25, 26, 27, 35], "item": [25, 26, 28, 41], "its": [25, 27, 35], "doe": [25, 26], "occur": 25, "ani": [25, 26, 28, 40, 41], "under": [25, 26], "manag": [25, 27, 35], "stai": 25, "clear": [25, 26], "remov": 25, "content": 25, "noth": 26, "alwai": 26, "simul": 26, "library_fil": 27, "cach": [27, 28, 41], "collect": [27, 35, 41], "respons": 27, "new": [27, 29], "ad": [27, 41], "runtim": 27, "current": [27, 41], "option": [27, 28, 29, 30, 31, 32, 35], "mechan": [27, 28], "adher": [27, 28], "interfac": [27, 28, 40], "load_sourc": 27, "given": 27, "append": 27, "source_id": 27, "found": [27, 35], "otherwis": 27, "lookup_sourc": 27, "look": 27, "up": [27, 28, 41], "filter": [27, 29, 35], "list": [27, 29, 30, 31, 32], "match": [27, 35], "criteria": [27, 35], "repres": [28, 29, 33, 34], "singl": [28, 41], "encapsul": 28, "detail": [28, 29, 40], "rais": [28, 30, 35], "valueerror": [28, 30, 35], "requir": [28, 30, 41], "field": [28, 29], "parser": 28, "dure": 28, "pars": [28, 41], "dictionari": [28, 35], "typic": 28, "yaml": 28, "check": [28, 40], "essenti": 28, "handl": [28, 35], "dict": [28, 35], "properti": 28, "must": 28, "summari": [28, 29], "nocach": 28, "input": [28, 34, 35], "required_field": 28, "geograph": 28, "rna": 29, "focu": 29, "facilit": 29, "access": [29, 41], "differ": [29, 41], "deep": [21, 29], "quality_report": 29, "qualiti": 29, "control": 29, "report": 29, "section": 29, "per": 29, "qualityreport": 29, "classmethod": 29, "matrix": 29, "either": 29, "directli": [29, 41], "union": 29, "cpg_sourc": 30, "required_cpg": 30, "extern": [30, 32], "while": 30, "need": [30, 41], "final": 30, "strategi": [30, 35, 36], "fill": [30, 31, 32], "certain": 30, "cpgs_to_imput": [31, 32], "itself": 31, "cpg_averag": 32, "measur": [33, 34], "Not": 34, "come": 34, "two": 34, "pass": 34, "should": 34, "later": 34, "2010": 34, "2012": 34, "model_definit": 35, "produc": 35, "search": 35, "definit": 35, "model_build": 35, "deconvolutionmodel": 35, "bound": 35, "from_definit": 35, "grimagemodel": 35, "linearmethylationmodel": 35, "linearmodel": 35, "lineartranscriptomicmodel": 35, "sexestimationmodel": 35, "request": [35, 40], "possibli": 35, "enhanc": [21, 35], "keyerror": 35, "invalid": 35, "appli": 35, "dunedin": 35, "hybrid_imput": 35, "gold": 35, "sesame_450k": 35, "sesam": 35, "450k": 35, "These": 36, "allow": 36, "complex": [36, 41], "hybrid": 36, "examim": 40, "implemen": 40, "prereleas": 40, "version": 40, "There": 40, "mai": 40, "bug": 40, "subject": 40, "github": 40, "com": 40, "bio": 40, "homepag": 40, "io": 40, "pip": 40, "wa": 40, "correctli": 40, "out": [40, 41], "some": [40, 41], "team": 40, "answer": 40, "question": 40, "discuss": 40, "relat": 40, "find": 40, "replic": 40, "setup": 40, "repo": 40, "omic": 41, "revolut": 41, "transform": 41, "biologi": 41, "wealth": 41, "potenti": 41, "care": 41, "could": 41, "offer": 41, "comprehens": 41, "insight": 41, "one": 41, "surrog": 41, "endpoint": 41, "revers": 41, "therapeut": 41, "howev": 41, "obstruct": 41, "address": 41, "issu": 41, "modern": 41, "recogn": 41, "ve": 41, "adopt": 41, "scienc": 41, "invit": 41, "explor": 41, "mission": 41, "primarili": 41, "compris": 41, "thousand": 41, "ambit": 41, "help": 41, "achiev": 41, "larg": 41, "small": 41, "task": 41, "vari": 41, "skill": 41, "level": 41, "knowledg": 41, "right": 41, "improv": 41, "better": 41, "environ": 41, "speed": 41, "10x": 41, "integr": 41, "unifi": 41, "separ": 41, "structur": 41, "know": 41, "process": 41, "partial": 41, "autom": 41, "review": 41, "genet": 41, "built": 41, "interest": 41, "share": 41, "reach": 41, "proprietari": 41, "would": 41, "api": 41, "talk": 41, "public": 41, "hear": 41, "privat": 41, "think": 41, "wai": 41, "fund": 41, "financi": 41, "monei": 41, "mainten": 41, "prize": 41, "pot": 41, "further": 41, "expans": 41, "contriubt": 41, "discord": 41, "server": 41, "26": [], "688": [], "fail": [], "insuffici": [], "52": [], "294": [], "547": [], "546": [], "27": [], "42154339464828": [], "5820519446087": [], "451": [], "406": [], "scipi": 5, "stat": 5, "pearsonr": 5, "pearson": 5, "regplot": 5, "scatter_kw": 5, "7025211774998293": 5, "447": [], "418": [], "417": [], "515": [5, 6, 42], "408": [5, 6, 42], "jenag": 21, "sequenc": 21, "endogen": 21, "mrna": 21, "homo": 21, "sapien": 21, "fo": 21, "62": 21, "rtype": 28, "alec": 0, "eam": 0, "boachallengedata": 21, "500": 21, "gse167998": 21, "bloodextend": 21, "l": 21, "68": 21, "gse180683": 21, "cd4t": 21, "cd8t": 21, "naiv": 21, "76": 21, "gse180970": 21, "umbil": 21, "artifici": 21, "mixtur": 21, "source_definit": 28, "twelvecelldeconvolutebloodep": 20, "gse182379": 21, "enha": 21}, "objects": {"biolearn": [[23, 0, 0, "-", "cache"], [24, 0, 0, "-", "data_library"], [36, 0, 0, "-", "imputation"], [38, 0, 0, "-", "load"], [39, 0, 0, "-", "model_gallery"]], "biolearn.cache": [[25, 1, 1, "", "LocalFolderCache"], [26, 1, 1, "", "NoCache"]], "biolearn.cache.LocalFolderCache": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "get"], [25, 2, 1, "", "store"]], "biolearn.cache.NoCache": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "clear"], [26, 2, 1, "", "get"], [26, 2, 1, "", "store"]], "biolearn.data_library": [[27, 1, 1, "", "DataLibrary"], [28, 1, 1, "", "DataSource"], [29, 1, 1, "", "GeoData"]], "biolearn.data_library.DataLibrary": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "get"], [27, 2, 1, "", "load_sources"], [27, 2, 1, "", "lookup_sources"]], "biolearn.data_library.DataSource": [[28, 3, 1, "", "REQUIRED_FIELDS"], [28, 2, 1, "", "__init__"], [28, 2, 1, "", "load"]], "biolearn.data_library.GeoData": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "copy"], [29, 3, 1, "", "dnam"], [29, 2, 1, "", "from_methylation_matrix"], [29, 3, 1, "", "metadata"], [29, 2, 1, "", "quality_report"]], "biolearn.imputation": [[30, 4, 1, "", "hybrid_impute"], [31, 4, 1, "", "impute_from_average"], [32, 4, 1, "", "impute_from_standard"]], "biolearn.load": [[33, 4, 1, "", "load_fhs"], [34, 4, 1, "", "load_nhanes"]], "biolearn.model_gallery": [[35, 1, 1, "", "ModelGallery"]], "biolearn.model_gallery.ModelGallery": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "get"], [35, 3, 1, "", "model_builders"], [35, 2, 1, "", "search"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"team": 0, "core": 0, "develop": 0, "other": [0, 20], "contributor": 0, "omic": [1, 17], "biomark": [1, 7, 17, 41], "exampl": [1, 7, 10, 14, 15, 17, 22, 27, 28, 29, 32, 34, 35], "perform": 2, "custom": 2, "imput": [2, 30, 31, 32, 36], "load": [2, 3, 4, 5, 8, 12, 13, 15, 33, 34, 38], "methyl": [2, 3, 4, 15], "data": [2, 3, 4, 5, 8, 12, 13, 21, 36, 38], "from": [2, 3, 4, 5], "geo": [2, 3, 4, 5, 15, 21], "dataset": [2, 4, 15], "us": [2, 3, 4, 5, 12, 13, 15, 27, 28, 29, 32, 34, 35], "refer": [2, 37], "up": [2, 3, 4, 5, 12, 13], "target": 2, "run": [2, 3, 4, 5, 13], "now": [2, 3, 4, 5], "clock": [2, 4, 5, 20], "predict": [2, 3, 5, 12], "befor": 2, "after": 2, "visual": 2, "comparison": 2, "ag": [2, 4, 5, 8, 12], "you": 2, "can": 2, "also": 2, "build": [2, 12], "an": [2, 12, 13], "decor": 2, "bundl": 2, "get": [2, 3], "same": 2, "result": [2, 4, 5, 13], "function": 2, "directli": 2, "your": 2, "down": 3, "syndrom": 3, "epigenet": [3, 4], "plot": [3, 4, 5, 8, 13], "first": [3, 4, 5], "some": [3, 4, 5, 13], "librari": [3, 4, 5], "model": [3, 12, 13, 15, 20], "score": 3, "final": [3, 4], "gener": 3, "boxplot": 3, "show": [3, 8], "power": 3, "three": 4, "differ": 4, "produc": 4, "extract": 4, "metadata": 4, "seaborn": [4, 5], "transcriptom": 5, "against": 5, "chronolog": [5, 8], "comput": [6, 9, 11, 16, 18, 42], "time": [6, 9, 11, 16, 18, 42], "composit": [7, 17], "phenotyp": 8, "nhane": 8, "2010": 8, "calcul": 8, "biolog": 8, "base": 8, "phenotypicag": 8, "relat": 8, "between": 8, "surviv": 8, "curv": 8, "peopl": 8, "acceler": 8, "older": 8, "v": 8, "deceler": 8, "younger": 8, "challeng": [10, 13, 17], "submiss": [10, 12, 13, 17], "competit": [12, 13], "exist": 12, "lin": 12, "train": 13, "elasticnet": 13, "seper": 13, "test": 13, "set": 13, "elast": 13, "net": 13, "see": 13, "how": 13, "good": 13, "our": 13, "i": 13, "through": 13, "save": 13, "output": 13, "file": 13, "deconvolut": [14, 15, 17], "blood": 15, "measur": 15, "epic": 15, "platform": 15, "estim": 15, "cell": 15, "proport": 15, "compar": 15, "known": 15, "fac": 15, "fluoresc": 15, "activ": 15, "sort": 15, "sourc": 21, "biolearn": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41], "featur": 22, "cach": [23, 25, 26], "data_librari": [24, 27, 28, 29], "datalibrari": [24, 27], "localfoldercach": 25, "nocach": 26, "datasourc": 28, "geodata": 29, "hybrid_imput": 30, "impute_from_averag": 31, "impute_from_standard": 32, "load_fh": 33, "load_nhan": 34, "model_galleri": [35, 39], "modelgalleri": [35, 39], "util": [36, 38], "api": 37, "quickstart": 40, "import": 40, "link": 40, "requir": 40, "instal": 40, "discord": 40, "server": 40, "issu": 40, "contribut": 40, "futur": 41, "join": 41, "u": 41}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Performing custom imputations": [[2, "performing-custom-imputations"]], "Load methylation data from a GEO dataset to use as a reference for imputation": [[2, "load-methylation-data-from-a-geo-dataset-to-use-as-a-reference-for-imputation"]], "Load up a target dataset and run the imputation": [[2, "load-up-a-target-dataset-and-run-the-imputation"]], "Now run clock predictions on the dataset before and after": [[2, "now-run-clock-predictions-on-the-dataset-before-and-after"]], "Visualize the comparison of age predictions": [[2, "visualize-the-comparison-of-age-predictions"]], "You can also build an imputation decorator to bundle with the clock": [[2, "you-can-also-build-an-imputation-decorator-to-bundle-with-the-clock"]], "You get the same results as running the function directly on your dataset": [[2, "you-get-the-same-results-as-running-the-function-directly-on-your-dataset"]], "Down Syndrome Epigenetic Plotting": [[3, "down-syndrome-epigenetic-plotting"]], "First load up some methylation data from GEO using the data library": [[3, "first-load-up-some-methylation-data-from-geo-using-the-data-library"], [4, "first-load-up-some-methylation-data-from-geo-using-the-data-library"]], "Now run the down syndrome model on the data to get a score": [[3, "now-run-the-down-syndrome-model-on-the-data-to-get-a-score"]], "Finally generate a boxplot to show the predictive power": [[3, "finally-generate-a-boxplot-to-show-the-predictive-power"]], "\u201cEpigenetic Clocks\u201d in GEO Data": [[4, "epigenetic-clocks-in-geo-data"]], "Now run three different clocks on the dataset to produce epigenetic clock ages": [[4, "now-run-three-different-clocks-on-the-dataset-to-produce-epigenetic-clock-ages"]], "Finally extract the age data from the metadata from GEO and plot the results using seaborn": [[4, "finally-extract-the-age-data-from-the-metadata-from-geo-and-plot-the-results-using-seaborn"]], "Composite Biomarkers Examples": [[7, "composite-biomarkers-examples"], [17, "composite-biomarkers-examples"]], "\u201cPhenotypic Ages\u201d in NHANES Data": [[8, "phenotypic-ages-in-nhanes-data"]], "Loading NHANES 2010 data": [[8, "loading-nhanes-2010-data"]], "Calculate \u201cbiological age\u201d based on PhenotypicAge": [[8, "calculate-biological-age-based-on-phenotypicage"]], "Show relation between biological age and chronological age": [[8, "show-relation-between-biological-age-and-chronological-age"]], "Plot survival curve for people with accelerated aging (older biological age) vs decelerated aging (younger biological age)": [[8, "plot-survival-curve-for-people-with-accelerated-aging-older-biological-age-vs-decelerated-aging-younger-biological-age"]], "Computation times": [[9, "computation-times"], [11, "computation-times"], [16, "computation-times"], [18, "computation-times"], [6, "computation-times"], [42, "computation-times"]], "Challenge Submission Examples": [[10, "challenge-submission-examples"], [17, "challenge-submission-examples"]], "Deconvolution Examples": [[14, "deconvolution-examples"], [17, "deconvolution-examples"]], "\u201cDeconvolution Example\u201d": [[15, "deconvolution-example"]], "Load GEO blood methylation dataset measured on EPIC platform": [[15, "load-geo-blood-methylation-dataset-measured-on-epic-platform"]], "Estimate cell proportions using EPIC deconvolution model": [[15, "estimate-cell-proportions-using-epic-deconvolution-model"]], "Compare to known cell proportions measured with FACS (fluorescence-activated cell sorting)": [[15, "compare-to-known-cell-proportions-measured-with-facs-fluorescence-activated-cell-sorting"]], "biolearn.cache: Cache": [[23, "module-biolearn.cache"]], "biolearn.cache.LocalFolderCache": [[25, "biolearn-cache-localfoldercache"]], "biolearn.cache.NoCache": [[26, "biolearn-cache-nocache"]], "biolearn.load.load_fhs": [[33, "biolearn-load-load-fhs"]], "biolearn.load.load_nhanes": [[34, "biolearn-load-load-nhanes"]], "Examples using biolearn.load.load_nhanes": [[34, "examples-using-biolearn-load-load-nhanes"]], "API References": [[37, "api-references"]], "biolearn.load: Data Loading Utilities": [[38, "module-biolearn.load"]], "Quickstart": [[40, "quickstart"]], "Biolearn": [[40, "biolearn"], [22, "biolearn"]], "Important links": [[40, "important-links"]], "Requirements": [[40, "requirements"]], "Install": [[40, "install"]], "Discord server": [[40, "discord-server"]], "Issues": [[40, "issues"]], "Contributing": [[40, "contributing"]], "Biolearn and the Future of Biomarkers": [[41, "biolearn-and-the-future-of-biomarkers"]], "Join Us": [[41, "join-us"]], "Omics Biomarker Examples": [[1, "omics-biomarker-examples"], [17, "omics-biomarker-examples"]], "\u201cTranscriptomic Clock\u201d using GEO Data": [[5, "transcriptomic-clock-using-geo-data"]], "First load up some transcriptomic data from GEO using the data library": [[5, "first-load-up-some-transcriptomic-data-from-geo-using-the-data-library"]], "Now run the transcriptomic clock to predict age": [[5, "now-run-the-transcriptomic-clock-to-predict-age"]], "Plot the results against the chronological age using seaborn": [[5, "plot-the-results-against-the-chronological-age-using-seaborn"]], "Examples": [[17, "examples"]], "Featured examples": [[22, "featured-examples"]], "biolearn.model_gallery.ModelGallery": [[35, "biolearn-model-gallery-modelgallery"]], "Examples using biolearn.model_gallery.ModelGallery": [[35, "examples-using-biolearn-model-gallery-modelgallery"]], "biolearn.model_gallery: ModelGallery": [[39, "module-biolearn.model_gallery"]], "Team": [[0, "team"]], "Core developers": [[0, "core-developers"]], "Other contributors": [[0, "other-contributors"]], "biolearn.imputation.hybrid_impute": [[30, "biolearn-imputation-hybrid-impute"]], "biolearn.imputation.impute_from_average": [[31, "biolearn-imputation-impute-from-average"]], "biolearn.imputation.impute_from_standard": [[32, "biolearn-imputation-impute-from-standard"]], "Examples using biolearn.imputation.impute_from_standard": [[32, "examples-using-biolearn-imputation-impute-from-standard"]], "biolearn.imputation: Data Imputation Utilities": [[36, "biolearn-imputation-data-imputation-utilities"]], "Building a competition submission using an existing model": [[12, "building-a-competition-submission-using-an-existing-model"]], "Loading up the data for the competition": [[12, "loading-up-the-data-for-the-competition"], [13, "loading-up-the-data-for-the-competition"]], "Use the Lin model to predict the age": [[12, "use-the-lin-model-to-predict-the-age"]], "Training an ElasticNet model": [[13, "training-an-elasticnet-model"]], "Load up some training data": [[13, "load-up-some-training-data"]], "Seperate data into training and test sets": [[13, "seperate-data-into-training-and-test-sets"]], "Train a model using elastic net": [[13, "train-a-model-using-elastic-net"]], "Plot the results to see how good our model is": [[13, "plot-the-results-to-see-how-good-our-model-is"]], "Run the challenge data through the model": [[13, "run-the-challenge-data-through-the-model"]], "Save the results as an output file for submission": [[13, "save-the-results-as-an-output-file-for-submission"]], "biolearn.data_library: DataLibrary": [[24, "module-biolearn.data_library"]], "biolearn.data_library.DataLibrary": [[27, "biolearn-data-library-datalibrary"]], "Examples using biolearn.data_library.DataLibrary": [[27, "examples-using-biolearn-data-library-datalibrary"]], "biolearn.data_library.DataSource": [[28, "biolearn-data-library-datasource"]], "Examples using biolearn.data_library.DataSource": [[28, "examples-using-biolearn-data-library-datasource"]], "biolearn.data_library.GeoData": [[29, "biolearn-data-library-geodata"]], "Examples using biolearn.data_library.GeoData": [[29, "examples-using-biolearn-data-library-geodata"]], "Clocks and Other Models": [[20, "clocks-and-other-models"]], "GEO Data Sources": [[21, "geo-data-sources"]]}, "indexentries": {"biolearn.cache": [[23, "module-biolearn.cache"]], "module": [[23, "module-biolearn.cache"], [24, "module-biolearn.data_library"], [36, "module-biolearn.imputation"], [38, "module-biolearn.load"], [39, "module-biolearn.model_gallery"]], "biolearn.data_library": [[24, "module-biolearn.data_library"]], "localfoldercache (class in biolearn.cache)": [[25, "biolearn.cache.LocalFolderCache"]], "__init__() (biolearn.cache.localfoldercache method)": [[25, "biolearn.cache.LocalFolderCache.__init__"]], "clear() (biolearn.cache.localfoldercache method)": [[25, "biolearn.cache.LocalFolderCache.clear"]], "get() (biolearn.cache.localfoldercache method)": [[25, "biolearn.cache.LocalFolderCache.get"]], "store() (biolearn.cache.localfoldercache method)": [[25, "biolearn.cache.LocalFolderCache.store"]], "nocache (class in biolearn.cache)": [[26, "biolearn.cache.NoCache"]], "__init__() (biolearn.cache.nocache method)": [[26, "biolearn.cache.NoCache.__init__"]], "clear() (biolearn.cache.nocache method)": [[26, "biolearn.cache.NoCache.clear"]], "get() (biolearn.cache.nocache method)": [[26, "biolearn.cache.NoCache.get"]], "store() (biolearn.cache.nocache method)": [[26, "biolearn.cache.NoCache.store"]], "datalibrary (class in biolearn.data_library)": [[27, "biolearn.data_library.DataLibrary"]], "__init__() (biolearn.data_library.datalibrary method)": [[27, "biolearn.data_library.DataLibrary.__init__"]], "get() (biolearn.data_library.datalibrary method)": [[27, "biolearn.data_library.DataLibrary.get"]], "load_sources() (biolearn.data_library.datalibrary method)": [[27, "biolearn.data_library.DataLibrary.load_sources"]], "lookup_sources() (biolearn.data_library.datalibrary method)": [[27, "biolearn.data_library.DataLibrary.lookup_sources"]], "datasource (class in biolearn.data_library)": [[28, "biolearn.data_library.DataSource"]], "required_fields (biolearn.data_library.datasource attribute)": [[28, "biolearn.data_library.DataSource.REQUIRED_FIELDS"]], "__init__() (biolearn.data_library.datasource method)": [[28, "biolearn.data_library.DataSource.__init__"]], "load() (biolearn.data_library.datasource method)": [[28, "biolearn.data_library.DataSource.load"]], "geodata (class in biolearn.data_library)": [[29, "biolearn.data_library.GeoData"]], "__init__() (biolearn.data_library.geodata method)": [[29, "biolearn.data_library.GeoData.__init__"]], "copy() (biolearn.data_library.geodata method)": [[29, "biolearn.data_library.GeoData.copy"]], "dnam (biolearn.data_library.geodata attribute)": [[29, "biolearn.data_library.GeoData.dnam"]], "from_methylation_matrix() (biolearn.data_library.geodata class method)": [[29, "biolearn.data_library.GeoData.from_methylation_matrix"]], "metadata (biolearn.data_library.geodata attribute)": [[29, "biolearn.data_library.GeoData.metadata"]], "quality_report() (biolearn.data_library.geodata method)": [[29, "biolearn.data_library.GeoData.quality_report"]], "hybrid_impute() (in module biolearn.imputation)": [[30, "biolearn.imputation.hybrid_impute"]], "impute_from_average() (in module biolearn.imputation)": [[31, "biolearn.imputation.impute_from_average"]], "impute_from_standard() (in module biolearn.imputation)": [[32, "biolearn.imputation.impute_from_standard"]], "load_fhs() (in module biolearn.load)": [[33, "biolearn.load.load_fhs"]], "load_nhanes() (in module biolearn.load)": [[34, "biolearn.load.load_nhanes"]], "modelgallery (class in biolearn.model_gallery)": [[35, "biolearn.model_gallery.ModelGallery"]], "__init__() (biolearn.model_gallery.modelgallery method)": [[35, "biolearn.model_gallery.ModelGallery.__init__"]], "get() (biolearn.model_gallery.modelgallery method)": [[35, "biolearn.model_gallery.ModelGallery.get"]], "model_builders (biolearn.model_gallery.modelgallery attribute)": [[35, "biolearn.model_gallery.ModelGallery.model_builders"]], "search() (biolearn.model_gallery.modelgallery method)": [[35, "biolearn.model_gallery.ModelGallery.search"]], "biolearn.imputation": [[36, "module-biolearn.imputation"]], "biolearn.load": [[38, "module-biolearn.load"]], "biolearn.model_gallery": [[39, "module-biolearn.model_gallery"]]}})