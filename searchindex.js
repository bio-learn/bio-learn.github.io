Search.setIndex({"docnames": ["authors", "auto_examples/00_epigenetic_biomarkers/index", "auto_examples/00_epigenetic_biomarkers/plot_custom_imputation_implementation", "auto_examples/00_epigenetic_biomarkers/plot_down_syndrome_model", "auto_examples/00_epigenetic_biomarkers/plot_epigenetic_clocks_on_geo", "auto_examples/00_epigenetic_biomarkers/sg_execution_times", "auto_examples/01_composite_biomarkers/index", "auto_examples/01_composite_biomarkers/plot_nhanes", "auto_examples/01_composite_biomarkers/sg_execution_times", "auto_examples/02_challenge_submissions/index", "auto_examples/02_challenge_submissions/sg_execution_times", "auto_examples/02_challenge_submissions/simple_competiton_submission", "auto_examples/02_challenge_submissions/training_simple_model", "auto_examples/index", "auto_examples/sg_execution_times", "changes/names", "clocks", "data", "index", "modules/data_library", "modules/generated/biolearn.data_library.DataLibrary", "modules/generated/biolearn.data_library.DataSource", "modules/generated/biolearn.data_library.GeoData", "modules/generated/biolearn.imputation.biolearn_impute", "modules/generated/biolearn.imputation.hybrid_impute", "modules/generated/biolearn.imputation.impute_from_average", "modules/generated/biolearn.imputation.impute_from_standard", "modules/generated/biolearn.load.load_fhs", "modules/generated/biolearn.load.load_nhanes", "modules/generated/biolearn.model_gallery.ModelGallery", "modules/imputation", "modules/index", "modules/load", "modules/model_gallery", "quickstart", "roadmap", "sg_execution_times"], "filenames": ["authors.rst", "auto_examples/00_epigenetic_biomarkers/index.rst", "auto_examples/00_epigenetic_biomarkers/plot_custom_imputation_implementation.rst", "auto_examples/00_epigenetic_biomarkers/plot_down_syndrome_model.rst", "auto_examples/00_epigenetic_biomarkers/plot_epigenetic_clocks_on_geo.rst", "auto_examples/00_epigenetic_biomarkers/sg_execution_times.rst", "auto_examples/01_composite_biomarkers/index.rst", "auto_examples/01_composite_biomarkers/plot_nhanes.rst", "auto_examples/01_composite_biomarkers/sg_execution_times.rst", "auto_examples/02_challenge_submissions/index.rst", "auto_examples/02_challenge_submissions/sg_execution_times.rst", "auto_examples/02_challenge_submissions/simple_competiton_submission.rst", "auto_examples/02_challenge_submissions/training_simple_model.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "changes/names.rst", "clocks.rst", "data.rst", "index.rst", "modules/data_library.rst", "modules/generated/biolearn.data_library.DataLibrary.rst", "modules/generated/biolearn.data_library.DataSource.rst", "modules/generated/biolearn.data_library.GeoData.rst", "modules/generated/biolearn.imputation.biolearn_impute.rst", "modules/generated/biolearn.imputation.hybrid_impute.rst", "modules/generated/biolearn.imputation.impute_from_average.rst", "modules/generated/biolearn.imputation.impute_from_standard.rst", "modules/generated/biolearn.load.load_fhs.rst", "modules/generated/biolearn.load.load_nhanes.rst", "modules/generated/biolearn.model_gallery.ModelGallery.rst", "modules/imputation.rst", "modules/index.rst", "modules/load.rst", "modules/model_gallery.rst", "quickstart.md", "roadmap.rst", "sg_execution_times.rst"], "titles": ["Team", "Epigenetic Clock Examples", "Performing custom imputations", "Down Syndrome Epigenetic Plotting", "\u201cEpigenetic Clocks\u201d in GEO Data", "Computation times", "Composite Biomarkers Examples", "\u201cPhenotypic Ages\u201d in NHANES Data", "Computation times", "Challenge Submission Examples", "Computation times", "Building a competition submission using an existing model", "Training an ElasticNet model", "Examples", "Computation times", "&lt;no title&gt;", "Clocks and Other Models", "GEO Data Sources", "Biolearn", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.data_library</span></code>: DataLibrary", "biolearn.data_library.DataLibrary", "biolearn.data_library.DataSource", "biolearn.data_library.GeoData", "biolearn.imputation.biolearn_impute", "biolearn.imputation.hybrid_impute", "biolearn.imputation.impute_from_average", "biolearn.imputation.impute_from_standard", "biolearn.load.load_fhs", "biolearn.load.load_nhanes", "biolearn.model_gallery.ModelGallery", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.imputation</span></code>: Data Imputation Utilities", "API References", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.load</span></code>: Data Loading Utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">biolearn.model_gallery</span></code>: ModelGallery", "Quickstart", "Biolearn and the Future of Biomarkers", "Computation times"], "terms": {"thi": [0, 2, 3, 4, 7, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35], "work": [0, 35], "i": [0, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35], "made": [0, 35], "avail": [0, 18, 34, 35], "commun": [0, 11], "peopl": 0, "which": [0, 12, 22, 28], "origin": [0, 2], "from": [0, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 34, 35, 36], "biomark": [0, 9, 18, 20, 34], "ag": [0, 6, 8, 9, 12, 13, 16, 17, 18, 28, 34, 35, 36], "consortium": [0, 18], "The": [0, 20, 29, 34, 35], "biolearn": [0, 2, 3, 4, 7, 11, 12, 16, 17, 31], "ar": [0, 2, 12, 18, 20, 21, 22, 24, 28, 34, 35], "mahdi": 0, "moqri": 0, "research": [0, 20, 35], "boa": 0, "execut": [0, 5, 8, 10, 13, 14, 34, 36], "martin": 0, "perez": 0, "guevara": 0, "machin": 0, "learn": [0, 18, 34, 35], "engin": 0, "seth": 0, "paulson": 0, "softwar": 0, "architect": 0, "albert": 0, "ying": 0, "harvard": 0, "universii": 0, "dayoon": 0, "kwon": 0, "univers": 0, "california": 0, "special": 0, "thank": 0, "scientif": 0, "member": 0, "plot": [1, 2, 5, 6, 13, 18, 22, 36], "result": [1, 3, 11, 13], "run": [1, 7, 11, 13, 16, 18, 29, 34], "function": [1, 13, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32], "geo": [1, 5, 13, 20, 21, 22, 35, 36], "data": [1, 5, 6, 8, 13, 18, 20, 21, 22, 24, 27, 28, 29, 34, 35, 36], "down": [1, 5, 12, 13, 16, 22, 36], "syndrom": [1, 5, 13, 16, 22, 36], "perform": [1, 5, 7, 13, 22, 26, 36], "custom": [1, 5, 13, 22, 26, 36], "imput": [1, 4, 5, 13, 22, 29, 36], "go": [2, 3, 4, 7, 11, 12], "end": [2, 3, 4, 7, 11, 12], "download": [2, 3, 4, 7, 11, 12, 13], "full": [2, 3, 4, 7, 11, 12], "exampl": [2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 31, 34, 36], "code": [2, 3, 4, 7, 11, 12, 13, 18, 34, 35], "browser": [2, 3, 4, 7, 11, 12], "via": [2, 3, 4, 7, 11, 12, 35], "binder": [2, 3, 4, 7, 11, 12], "demonstr": [2, 18], "eas": 2, "librari": [2, 20, 21, 34, 35], "data_librari": [2, 3, 4, 11, 12, 34], "import": [2, 3, 4, 7, 11, 12], "datalibrari": [2, 3, 4, 12, 21, 34], "geodata": [2, 11, 12, 21], "comput": [2, 18], "averag": [2, 24, 25, 26, 30], "reference_dataset": 2, "gse40279": [2, 12, 17], "reference_averag": 2, "dnam": [2, 4, 12, 22, 23, 24, 25, 26], "mean": [2, 12], "axi": 2, "1": [2, 5, 7, 8, 12, 35], "second": [2, 3, 4, 7], "target_dataset": 2, "gse51057": [2, 17], "impute_from_standard": 2, "imputed_data": 2, "imputed_dataset": 2, "metadata": [2, 3, 12, 21, 22], "model": [2, 9, 10, 13, 20, 29, 35, 36], "galleri": [2, 3, 4, 7, 11, 12, 13, 16, 36], "compar": [2, 18], "epigenet": [2, 5, 17, 18, 21, 22, 35, 36], "model_galleri": [2, 3, 4, 11], "modelgalleri": [2, 3, 4, 11], "clock_model": 2, "horvathv1": [2, 4, 16], "original_age_predict": 2, "imputed_age_predict": 2, "seaborn": [2, 3, 7], "sn": [2, 3, 4, 7], "panda": [2, 4, 12, 22, 27, 28], "pd": [2, 4, 12, 23, 24, 25, 26], "matplotlib": [2, 3, 7, 12], "pyplot": [2, 3, 7, 12], "plt": [2, 3, 7, 12], "prepar": [2, 35], "comparison_data": 2, "datafram": [2, 4, 12, 22, 23, 24, 25, 26, 27, 28], "creat": [2, 3, 22, 34], "scatter": [2, 4, 12], "figur": [2, 3, 12], "figsiz": [2, 3, 12], "8": [2, 4, 5, 12, 24], "6": [2, 3, 12, 36], "scatterplot": [2, 7], "x": [2, 3, 7, 12], "y": [2, 3, 7, 12], "titl": [2, 3, 12, 17], "v": [2, 12, 34], "xlabel": [2, 7, 12], "ylabel": [2, 7, 12], "grid": [2, 12], "true": [2, 3, 12], "show": [2, 11, 12, 18], "imputationdecor": [2, 29], "defin": [2, 12, 20], "method": [2, 29, 30], "def": 2, "custom_impute_method": 2, "dnam_data": 2, "needed_cpg": 2, "return": [2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "wrap": [2, 29], "decorated_clock": 2, "decorated_clock_predict": 2, "verifi": [2, 34], "direct": 2, "approach": [2, 35], "same_result": 2, "all": [2, 13, 22, 25, 26, 36], "print": [2, 12], "total": [2, 3, 4, 5, 7, 8, 10, 14, 18, 36], "time": [2, 3, 4, 7, 12, 35], "script": [2, 3, 4, 7], "minut": [2, 3, 4, 7, 35], "32": [2, 5], "315": [2, 5], "estim": [2, 3, 4, 7, 11, 12], "memori": [2, 3, 4, 7, 11, 12], "usag": [2, 3, 4, 7, 11, 12, 31], "11827": 2, "mb": [2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 36], "jupyt": [2, 3, 4, 7, 11, 12, 13, 34], "notebook": [2, 3, 4, 7, 11, 12, 13, 34], "plot_custom_imputation_implement": [2, 5, 36], "ipynb": [2, 3, 4, 7, 11, 12], "python": [2, 3, 4, 7, 11, 12, 13, 34], "sourc": [2, 3, 4, 7, 11, 12, 13, 16, 18, 20, 21, 24, 34, 35], "py": [2, 3, 4, 5, 7, 8, 10, 11, 12, 36], "gener": [2, 4, 7, 9, 11, 12, 13, 22, 35], "sphinx": [2, 3, 4, 7, 11, 12, 13], "your": [3, 4, 7, 11, 12, 35], "dna": [3, 4, 17, 20, 23, 24, 25, 26, 30], "how": [3, 11, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35], "samepl": 3, "can": [3, 11, 16, 18, 20, 22, 29, 34, 35], "distiguish": 3, "test_data": 3, "gse52588": [3, 17], "downsyndrom": [3, 16], "set": [3, 4, 17, 20, 30], "index": [3, 4, 12], "merg": 3, "set_index": 3, "astyp": 3, "str": [3, 20, 22, 24, 25, 26, 29], "inplac": 3, "merged_data": 3, "join": [3, 18], "category_ord": 3, "healthi": [3, 17], "palett": 3, "green": 3, "red": 3, "configur": [3, 35], "10": [3, 12, 34], "ax": [3, 7], "disease_st": 3, "width": 3, "0": [3, 4, 7, 8, 10, 11, 12, 14, 24, 36], "3": [3, 5, 12, 34], "order": 3, "stripplot": 3, "jitter": 3, "hue": 3, "dodg": 3, "fals": 3, "legend": 3, "set_titl": 3, "despin": 3, "28": [3, 5], "809": [3, 5], "928": [3, 5], "plot_down_syndrome_model": [3, 5, 36], "calcul": [4, 12], "multipl": 4, "them": [4, 13, 20, 35], "against": 4, "chronolog": [4, 18], "gse41169": [4, 17], "blood": [4, 6, 7, 13, 16, 17, 35], "data_sourc": 4, "get": [4, 11, 12, 18, 20, 29, 34], "note": [4, 12], "default": [4, 20, 24, 29], "miss": [4, 21, 22, 23, 24, 25, 26, 30], "To": [4, 34], "chang": [4, 17, 34], "behavior": [4, 34], "paramet": [4, 12, 20, 21, 22, 23, 24, 25, 26, 28, 29], "when": 4, "horvath_result": 4, "predict": [4, 12, 16, 18, 29], "hannum_result": 4, "hannum": [4, 16], "phenoage_result": 4, "phenoag": [4, 16], "actual_ag": 4, "plot_data": 4, "horvath": [4, 18, 34], "relplot": 4, "kind": 4, "axisgrid": 4, "facetgrid": 4, "object": [4, 12, 22, 29], "0x79382ae8d540": 4, "467": [4, 5], "1724": [4, 5], "plot_epigenetic_clocks_on_geo": [4, 5, 36], "02": 5, "09": 5, "590": 5, "file": [5, 8, 10, 11, 14, 16, 20, 21, 22, 35, 36], "auto_exampl": [5, 8, 10, 14], "00_epigenetic_biomark": [5, 36], "mem": [5, 8, 10, 14, 36], "01": [5, 8, 12], "11826": 5, "00": [5, 8, 10, 14, 36], "clock": [5, 6, 18, 21, 22, 34, 36], "08": 5, "5": [5, 7, 12], "surviv": [6, 13, 18], "curv": [6, 13], "base": [6, 12, 13, 20, 24, 29], "us": [6, 9, 10, 13, 17, 18, 23, 24, 25, 27, 34, 35, 36], "standard": [6, 13, 23], "test": [6, 13, 35], "phenotyp": [6, 8, 13, 28, 36], "nhane": [6, 8, 13, 18, 28, 36], "exam": 7, "analys": [7, 18, 34], "load_nhan": 7, "year": [7, 16, 28], "df": [7, 12, 27, 28], "years_until_death": 7, "months_until_death": 7, "12": 7, "hematologi": 7, "phenotypic_ag": 7, "": [7, 21, 35], "2": [7, 10, 12], "lifelin": 7, "kaplanmeierfitt": 7, "biologically_old": 7, "subplot": 7, "group": [7, 28], "ix": 7, "t": [7, 12], "e": 7, "is_dead": 7, "kmf": 7, "fit": [7, 12], "label": 7, "plot_survival_funct": 7, "text": 7, "23": 7, "52222222222222": 7, "108": [7, 8], "9": [7, 8], "plot_nhan": [7, 8, 36], "01_composite_biomark": [8, 36], "build": [9, 10, 13, 29, 35, 36], "competit": [9, 10, 13, 29, 36], "an": [9, 10, 13, 20, 21, 22, 24, 26, 27, 28, 29, 35, 36], "exist": [9, 10, 13, 24, 29, 36], "train": [9, 10, 13, 20, 36], "elasticnet": [9, 10, 13, 20, 36], "000": [10, 14, 36], "02_challenge_submiss": [10, 36], "submiss": [10, 29, 36], "simple_competiton_submiss": [10, 11, 36], "training_simple_model": [10, 12, 36], "you": [11, 12, 13, 18, 34, 35], "warmup": [11, 12], "challeng": [11, 18, 35], "link": [11, 12], "here": [11, 12], "http": [11, 12, 34], "www": [11, 12], "synaps": [11, 12, 18], "org": [11, 12], "syn52966292": [11, 12], "wiki": [11, 12], "625231": [11, 12], "downloaded_data_file_path": [11, 12], "add": [11, 12], "path": [11, 12, 20, 21, 22, 35], "challenge_data": [11, 12], "from_methylation_matrix": [11, 12, 22], "score": 11, "best": 11, "so": 11, "let": 11, "save": 11, "csv": [11, 22], "correct": 11, "format": [11, 17, 20, 35], "now": [11, 35], "we": [11, 18, 34, 35], "expect": [11, 34], "rename_axi": 11, "sampleid": [11, 12], "renam": 11, "column": [11, 12, 22, 23, 24, 25, 26, 27, 28], "predictedag": [11, 12], "to_csv": 11, "lin_submiss": 11, "submit": [11, 12], "follow": [11, 13], "instruct": [11, 13, 34], "below": [11, 24], "simpl": [12, 30], "narrow": 12, "what": 12, "site": [12, 22, 23, 24, 25, 26], "correl": 12, "take": [12, 35], "long": 12, "numpi": 12, "np": 12, "sklearn": 12, "linear_model": 12, "linearregress": 12, "extract": [12, 35], "transpos": 12, "valu": [12, 23, 24, 25, 26, 30], "have": [12, 13, 34, 35], "sampl": [12, 17, 22, 23, 24, 25, 26, 35], "row": [12, 22, 23, 24, 25, 26, 27, 28], "cpg": [12, 23, 24, 25, 26], "bootstrap": 12, "featur": [12, 34], "select": 12, "n_bootstrap": 12, "20": 12, "threshold": [12, 24], "05": 12, "store": [12, 17, 20], "count": 12, "each": [12, 22, 27, 28], "deem": 12, "signific": 12, "cpg_count": 12, "zero": 12, "shape": 12, "begin": 12, "iter": 12, "_": 12, "rang": 12, "replac": [12, 24], "sample_idx": 12, "random": 12, "choic": 12, "size": 12, "x_sampl": 12, "y_sampl": 12, "identifi": [12, 20, 22, 35], "magnitud": [12, 35], "coeffici": [12, 16], "significant_cpg": 12, "where": [12, 13, 18, 22, 27, 28, 35], "ab": 12, "coef_": 12, "determin": [12, 24], "stabl": 12, "stable_cpg_sit": 12, "stable_cpg_nam": 12, "tolist": 12, "f": 12, "associ": [12, 17, 22], "more": [12, 18, 30, 31, 34, 35], "than": 12, "60": 12, "model_select": 12, "train_test_split": 12, "top_sites_df": 12, "x_train": 12, "x_test": 12, "y_train": 12, "y_test": 12, "test_siz": 12, "random_st": 12, "42": 12, "alpha": 12, "regular": 12, "strength": 12, "l1_ratio": 12, "mix": 12, "between": [12, 18], "l1": 12, "l2": 12, "lasso": 12, "ridg": 12, "metric": 12, "mean_squared_error": 12, "max_it": 12, "10000": 12, "evalu": 12, "y_pred": 12, "mse": 12, "squar": 12, "error": [12, 34], "7": 12, "edgecolor": 12, "w": 12, "linewidth": 12, "min": 12, "max": 12, "k": 12, "lw": 12, "line": [12, 18, 34], "refer": [12, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34], "actual": [12, 34], "both": [12, 22, 24, 35], "linestyl": 12, "4f": 12, "absolut": 12, "mae": 12, "pruned_data": 12, "fillna": 12, "challenge_result": 12, "predicted_age_df": 12, "name": [12, 16, 29], "If": [13, 20, 21, 22, 24, 29, 34, 35], "want": [13, 35], "make": 13, "sure": 13, "directori": 13, "write": [13, 35], "permiss": 13, "copi": [13, 22], "instal": 13, "biolean": 13, "manual": 13, "auto_examples_python": 13, "zip": 13, "auto_examples_jupyt": 13, "n": 14, "A": [14, 20, 21, 22, 27, 28, 29], "support": [16, 17, 18, 20, 28, 29, 35], "number": [16, 17, 28], "easili": [16, 18, 20, 34], "speci": [16, 29], "tissu": [16, 29], "2013": 16, "human": [16, 17, 35], "multi": [16, 18, 35], "paper": [16, 18, 34], "lin": 16, "2016": 16, "2018": 16, "yingcausag": 16, "2022": 16, "yingdamag": 16, "yingadaptag": 16, "horvathv2": 16, "skin": 16, "pedb": 16, "2019": 16, "buccal": 16, "zhang_10": 16, "mortal": [16, 18], "risk": 16, "dunedinpoam38": 16, "2020": 16, "rate": 16, "dunedinpac": [16, 18, 34], "grimagev1": 16, "adjust": 16, "grimagev2": 16, "alcoholmccartnei": 16, "alcohol": 16, "consumpt": 16, "bmi_mccartnei": 16, "bmi": 16, "dnamtl": 16, "adipos": 16, "telomer": 16, "length": 16, "hrsinchphenoag": 16, "knight": 16, "cord": 16, "gestat": 16, "leecontrol": 16, "placenta": 16, "sexestim": 16, "2021": 16, "sex": [16, 17], "leerefinedrobust": 16, "leerobust": 16, "smokingmccartnei": 16, "smoke": 16, "statu": 16, "methyl": [17, 20, 22, 23, 24, 25, 26, 30, 35], "id": [17, 21], "present": 17, "genom": [17, 22], "wide": 17, "profil": 17, "reveal": 17, "quantit": 17, "view": 17, "o": 17, "illumina450k": 17, "656": 17, "ye": 17, "gse19711": 17, "unit": 17, "kingdom": 17, "ovar": 17, "illumina27k": 17, "540": 17, "No": 17, "methylom": 17, "analysi": 17, "me": 17, "329": 17, "gse42861": 17, "differenti": 17, "rheumatoid": 17, "arthriti": 17, "689": 17, "dutch": 17, "popul": 17, "95": 17, "gse51032": 17, "epic": 17, "itali": 17, "hugef": 17, "845": 17, "gse73103": 17, "mani": [17, 18, 34, 35], "obes": 17, "snp": 17, "strongli": 17, "met": 17, "355": 17, "gse69270": 17, "middl": 17, "indi": 17, "184": 17, "gse36054": 17, "children": 17, "192": 17, "gse64495": 17, "sever": [17, 18], "113": 17, "gse30870": 17, "newborn": 17, "nonagenarian": 17, "40": 17, "identif": 17, "signatur": [17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "87": 17, "gse157131": 17, "peripher": 17, "leukocyt": 17, "fro": 17, "illuminaep": 17, "946": 17, "gse132203": 17, "gradi": 17, "trauma": 17, "project": 17, "795": 17, "enabl": [18, 34], "easi": [18, 34, 35], "versatil": [18, 34], "It": [18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34], "provid": [18, 30, 34, 35], "tool": [18, 34, 35], "load": [18, 20, 21, 22, 34, 35], "publicli": [18, 34], "like": [18, 34, 35], "gene": [18, 34], "express": [18, 34], "omnibu": [18, 34], "nation": [18, 28, 34], "health": [18, 28, 34, 35], "nutrit": [18, 28, 34], "examin": [18, 28], "survei": [18, 28, 34], "framingham": [18, 27, 34], "heart": [18, 27, 34], "studi": [18, 27, 34], "also": [18, 34, 35], "contain": [18, 21, 22, 24, 26, 34], "implement": [18, 35], "common": [18, 34], "other": [18, 24, 34], "onli": [18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34], "few": [18, 34], "read": [18, 34], "about": [18, 21, 27, 28, 34, 35], "our": [18, 34, 35], "develop": [18, 34, 35], "organ": [18, 20, 22], "individu": [18, 27, 28], "especi": 18, "methuselah": 18, "foundat": 18, "volo": 18, "host": 18, "2024": 18, "2025": 18, "seri": [18, 24, 26], "platform": 18, "particip": 18, "ask": 18, "morbid": 18, "award": 18, "200k": 18, "quickstart": 18, "start": [18, 34], "discov": [], "biolog": [18, 29], "relationship": 18, "variou": [18, 29, 30], "point": 18, "class": [19, 20, 21, 22, 29, 31, 33], "page": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "document": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34], "explain": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "pleas": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35], "user": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], "guid": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], "big": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35], "pictur": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "library_fil": 20, "none": [20, 22, 25, 26, 29], "manag": [20, 29], "collect": [20, 29, 35], "respons": 20, "retriev": [20, 29], "new": [20, 22], "ad": [20, 35], "runtim": 20, "current": [20, 35], "__init__": [20, 21, 22, 29], "initi": [20, 21, 22, 29], "instanc": [20, 21, 22, 29], "option": [20, 22, 24, 25, 26, 29], "load_sourc": 20, "given": 20, "append": 20, "source_id": 20, "its": [20, 29], "found": [20, 29], "otherwis": 20, "lookup_sourc": 20, "look": 20, "up": [20, 35], "specifi": [20, 22, 29], "filter": [20, 22, 29], "list": [20, 22, 24, 25, 26], "match": [20, 29], "criteria": [20, 29], "repres": [21, 22, 27, 28], "singl": [21, 35], "encapsul": 21, "detail": [21, 22, 34], "includ": [21, 22, 34, 35], "rais": [21, 24, 29], "valueerror": [21, 24, 29], "ani": [21, 34, 35], "requir": [21, 24, 35], "field": [21, 22], "parser": 21, "dure": 21, "intend": 21, "yaml": 21, "dict": [21, 29], "dictionari": [21, 29], "properti": 21, "required_field": 21, "kei": 21, "item": [21, 35], "pars": [21, 35], "geograph": 21, "type": [21, 22, 23, 24, 25, 26, 27, 28, 29], "focu": 22, "facilit": 22, "access": [22, 35], "differ": [22, 35], "deep": 22, "quality_report": 22, "qualiti": 22, "control": 22, "report": 22, "section": 22, "percentag": 22, "summari": 22, "per": 22, "qualityreport": 22, "classmethod": 22, "matrix": 22, "either": 22, "directli": [22, 35], "union": 22, "dataset": [23, 24, 25, 26, 30, 35], "fill": [23, 24, 25, 26], "cpg_sourc": 24, "required_cpg": 24, "extern": [24, 26], "while": 24, "need": [24, 35], "final": 24, "float": 24, "strategi": [24, 30], "certain": 24, "cpgs_to_imput": [25, 26], "itself": 25, "cpg_averag": 26, "measur": [27, 28], "Not": 28, "come": 28, "two": 28, "pass": 28, "should": 28, "later": 28, "input": 28, "2010": 28, "2012": 28, "model_definit": 29, "produc": 29, "search": 29, "definit": 29, "model_build": 29, "grimagemodel": 29, "bound": 29, "from_definit": 29, "linearmethylationmodel": 29, "sexestimationmodel": 29, "imputation_method": 29, "request": [29, 34], "possibli": 29, "keyerror": 29, "invalid": 29, "modul": 30, "These": 30, "allow": 30, "complex": [30, 35], "hybrid": 30, "inform": 31, "examim": 34, "implemen": 34, "prereleas": 34, "version": 34, "There": 34, "mai": 34, "bug": 34, "interfac": 34, "subject": 34, "github": 34, "com": 34, "bio": 34, "homepag": 34, "io": 34, "pip": 34, "wa": 34, "correctli": 34, "open": [34, 35], "check": 34, "out": [34, 35], "some": [34, 35], "team": 34, "ha": [34, 35], "answer": 34, "question": 34, "discuss": 34, "relat": 34, "find": 34, "replic": 34, "setup": 34, "repo": 34, "698": [], "contribut": [18, 35], "omic": 35, "revolut": 35, "transform": 35, "biologi": 35, "wealth": 35, "potenti": 35, "care": 35, "see": [18, 35], "could": 35, "offer": 35, "comprehens": 35, "insight": 35, "one": 35, "surrog": 35, "endpoint": 35, "revers": 35, "therapeut": 35, "howev": 35, "obstruct": 35, "address": 35, "issu": 35, "modern": 35, "recogn": 35, "ve": 35, "adopt": 35, "scienc": 35, "invit": 35, "explor": 35, "roadmap": [18, 35], "mission": 35, "primarili": 35, "25": 35, "compris": 35, "thousand": 35, "ambit": 35, "help": 35, "achiev": 35, "larg": 35, "small": 35, "task": 35, "vari": 35, "skill": 35, "level": 35, "knowledg": 35, "right": 35, "improv": 35, "cach": 35, "better": 35, "environ": 35, "optim": 35, "speed": 35, "10x": 35, "integr": 35, "unifi": 35, "separ": 35, "structur": 35, "know": 35, "process": 35, "partial": 35, "autom": 35, "review": 35, "genet": 35, "diseas": 35, "built": 35, "interest": 35, "share": 35, "reach": 35, "proprietari": 35, "would": 35, "api": 35, "talk": 35, "public": 35, "hear": 35, "privat": 35, "think": 35, "wai": 35, "fund": 35, "financi": 35, "monei": 35, "mainten": 35, "prize": 35, "pot": 35, "further": 35, "expans": 35, "contriubt": 35, "discord": 35, "server": 35, "maintain": 35, "head": 18}, "objects": {"biolearn": [[19, 0, 0, "-", "data_library"], [30, 0, 0, "-", "imputation"], [32, 0, 0, "-", "load"], [33, 0, 0, "-", "model_gallery"]], "biolearn.data_library": [[20, 1, 1, "", "DataLibrary"], [21, 1, 1, "", "DataSource"], [22, 1, 1, "", "GeoData"]], "biolearn.data_library.DataLibrary": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "get"], [20, 2, 1, "", "load_sources"], [20, 2, 1, "", "lookup_sources"]], "biolearn.data_library.DataSource": [[21, 3, 1, "", "REQUIRED_FIELDS"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "load"]], "biolearn.data_library.GeoData": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "copy"], [22, 3, 1, "", "dnam"], [22, 2, 1, "", "from_methylation_matrix"], [22, 3, 1, "", "metadata"], [22, 2, 1, "", "quality_report"]], "biolearn.imputation": [[23, 4, 1, "", "biolearn_impute"], [24, 4, 1, "", "hybrid_impute"], [25, 4, 1, "", "impute_from_average"], [26, 4, 1, "", "impute_from_standard"]], "biolearn.load": [[27, 4, 1, "", "load_fhs"], [28, 4, 1, "", "load_nhanes"]], "biolearn.model_gallery": [[29, 1, 1, "", "ModelGallery"]], "biolearn.model_gallery.ModelGallery": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "get"], [29, 3, 1, "", "model_builders"], [29, 2, 1, "", "search"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"team": 0, "core": 0, "develop": 0, "other": [0, 16], "contributor": 0, "epigenet": [1, 3, 4, 13], "clock": [1, 2, 4, 13, 16], "exampl": [1, 6, 9, 13, 18, 20, 21, 22, 26, 28, 29], "perform": 2, "custom": 2, "imput": [2, 23, 24, 25, 26, 30], "load": [2, 3, 4, 7, 11, 12, 27, 28, 32], "methyl": [2, 3, 4], "data": [2, 3, 4, 7, 11, 12, 17, 30, 32], "from": [2, 3, 4], "geo": [2, 3, 4, 17], "dataset": [2, 4], "us": [2, 3, 4, 11, 12, 20, 21, 22, 26, 28, 29], "refer": [2, 31], "up": [2, 3, 4, 11, 12], "target": 2, "run": [2, 3, 4, 12], "now": [2, 3, 4], "predict": [2, 3, 11], "befor": 2, "after": 2, "visual": 2, "comparison": 2, "ag": [2, 4, 7, 11], "you": 2, "can": 2, "also": 2, "build": [2, 11], "an": [2, 11, 12], "decor": 2, "bundl": 2, "get": [2, 3], "same": 2, "result": [2, 4, 12], "function": 2, "directli": 2, "your": 2, "down": 3, "syndrom": 3, "plot": [3, 4, 7, 12], "first": [3, 4], "some": [3, 4, 12], "librari": [3, 4], "model": [3, 11, 12, 16], "score": 3, "final": [3, 4], "gener": 3, "boxplot": 3, "show": [3, 7], "power": 3, "three": 4, "differ": 4, "produc": 4, "extract": 4, "metadata": 4, "seaborn": 4, "comput": [5, 8, 10, 14, 36], "time": [5, 8, 10, 14, 36], "composit": [6, 13], "biomark": [6, 13, 35], "phenotyp": 7, "nhane": 7, "2010": 7, "calcul": 7, "biolog": 7, "base": 7, "phenotypicag": 7, "relat": 7, "between": 7, "chronolog": 7, "surviv": 7, "curv": 7, "peopl": 7, "acceler": 7, "older": 7, "v": 7, "deceler": 7, "younger": 7, "challeng": [9, 12, 13], "submiss": [9, 11, 12, 13], "competit": [11, 12], "exist": 11, "lin": 11, "train": 12, "elasticnet": 12, "seper": 12, "test": 12, "set": 12, "elast": 12, "net": 12, "see": 12, "how": 12, "good": 12, "our": 12, "i": 12, "through": 12, "save": 12, "output": 12, "file": 12, "sourc": 17, "biolearn": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35], "featur": 18, "data_librari": [19, 20, 21, 22], "datalibrari": [19, 20], "datasourc": 21, "geodata": 22, "biolearn_imput": 23, "hybrid_imput": 24, "impute_from_averag": 25, "impute_from_standard": 26, "load_fh": 27, "load_nhan": 28, "model_galleri": [29, 33], "modelgalleri": [29, 33], "util": [30, 32], "api": 31, "quickstart": 34, "import": 34, "link": 34, "requir": 34, "instal": 34, "discord": 34, "server": 34, "issu": 34, "contribut": 34, "futur": 35, "join": 35, "u": 35}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Team": [[0, "team"]], "Core developers": [[0, "core-developers"]], "Other contributors": [[0, "other-contributors"]], "Epigenetic Clock Examples": [[1, "epigenetic-clock-examples"], [13, "epigenetic-clock-examples"]], "Performing custom imputations": [[2, "performing-custom-imputations"]], "Load methylation data from a GEO dataset to use as a reference for imputation": [[2, "load-methylation-data-from-a-geo-dataset-to-use-as-a-reference-for-imputation"]], "Load up a target dataset and run the imputation": [[2, "load-up-a-target-dataset-and-run-the-imputation"]], "Now run clock predictions on the dataset before and after": [[2, "now-run-clock-predictions-on-the-dataset-before-and-after"]], "Visualize the comparison of age predictions": [[2, "visualize-the-comparison-of-age-predictions"]], "You can also build an imputation decorator to bundle with the clock": [[2, "you-can-also-build-an-imputation-decorator-to-bundle-with-the-clock"]], "You get the same results as running the function directly on your dataset": [[2, "you-get-the-same-results-as-running-the-function-directly-on-your-dataset"]], "Down Syndrome Epigenetic Plotting": [[3, "down-syndrome-epigenetic-plotting"]], "First load up some methylation data from GEO using the data library": [[3, "first-load-up-some-methylation-data-from-geo-using-the-data-library"], [4, "first-load-up-some-methylation-data-from-geo-using-the-data-library"]], "Now run the down syndrome model on the data to get a score": [[3, "now-run-the-down-syndrome-model-on-the-data-to-get-a-score"]], "Finally generate a boxplot to show the predictive power": [[3, "finally-generate-a-boxplot-to-show-the-predictive-power"]], "\u201cEpigenetic Clocks\u201d in GEO Data": [[4, "epigenetic-clocks-in-geo-data"]], "Now run three different clocks on the dataset to produce epigenetic clock ages": [[4, "now-run-three-different-clocks-on-the-dataset-to-produce-epigenetic-clock-ages"]], "Finally extract the age data from the metadata from GEO and plot the results using seaborn": [[4, "finally-extract-the-age-data-from-the-metadata-from-geo-and-plot-the-results-using-seaborn"]], "Computation times": [[5, "computation-times"], [8, "computation-times"], [10, "computation-times"], [14, "computation-times"], [36, "computation-times"]], "Composite Biomarkers Examples": [[6, "composite-biomarkers-examples"], [13, "composite-biomarkers-examples"]], "\u201cPhenotypic Ages\u201d in NHANES Data": [[7, "phenotypic-ages-in-nhanes-data"]], "Loading NHANES 2010 data": [[7, "loading-nhanes-2010-data"]], "Calculate \u201cbiological age\u201d based on PhenotypicAge": [[7, "calculate-biological-age-based-on-phenotypicage"]], "Show relation between biological age and chronological age": [[7, "show-relation-between-biological-age-and-chronological-age"]], "Plot survival curve for people with accelerated aging (older biological age) vs decelerated aging (younger biological age)": [[7, "plot-survival-curve-for-people-with-accelerated-aging-older-biological-age-vs-decelerated-aging-younger-biological-age"]], "Challenge Submission Examples": [[9, "challenge-submission-examples"], [13, "challenge-submission-examples"]], "Examples": [[13, "examples"]], "biolearn.data_library: DataLibrary": [[19, "module-biolearn.data_library"]], "biolearn.data_library.DataSource": [[21, "biolearn-data-library-datasource"]], "Examples using biolearn.data_library.DataSource": [[21, "examples-using-biolearn-data-library-datasource"]], "biolearn.data_library.GeoData": [[22, "biolearn-data-library-geodata"]], "Examples using biolearn.data_library.GeoData": [[22, "examples-using-biolearn-data-library-geodata"]], "biolearn.imputation.biolearn_impute": [[23, "biolearn-imputation-biolearn-impute"]], "biolearn.imputation.hybrid_impute": [[24, "biolearn-imputation-hybrid-impute"]], "biolearn.imputation.impute_from_average": [[25, "biolearn-imputation-impute-from-average"]], "biolearn.imputation.impute_from_standard": [[26, "biolearn-imputation-impute-from-standard"]], "Examples using biolearn.imputation.impute_from_standard": [[26, "examples-using-biolearn-imputation-impute-from-standard"]], "biolearn.load.load_fhs": [[27, "biolearn-load-load-fhs"]], "biolearn.load.load_nhanes": [[28, "biolearn-load-load-nhanes"]], "Examples using biolearn.load.load_nhanes": [[28, "examples-using-biolearn-load-load-nhanes"]], "biolearn.imputation: Data Imputation Utilities": [[30, "biolearn-imputation-data-imputation-utilities"]], "API References": [[31, "api-references"]], "biolearn.load: Data Loading Utilities": [[32, "module-biolearn.load"]], "biolearn.model_gallery: ModelGallery": [[33, "biolearn-model-gallery-modelgallery"]], "Quickstart": [[34, "quickstart"]], "Biolearn": [[34, "biolearn"], [18, "biolearn"]], "Important links": [[34, "important-links"]], "Requirements": [[34, "requirements"]], "Install": [[34, "install"]], "Discord server": [[34, "discord-server"]], "Issues": [[34, "issues"]], "Contributing": [[34, "contributing"]], "biolearn.data_library.DataLibrary": [[20, "biolearn-data-library-datalibrary"]], "Examples using biolearn.data_library.DataLibrary": [[20, "examples-using-biolearn-data-library-datalibrary"]], "biolearn.model_gallery.ModelGallery": [[29, "biolearn-model-gallery-modelgallery"]], "Examples using biolearn.model_gallery.ModelGallery": [[29, "examples-using-biolearn-model-gallery-modelgallery"]], "Featured examples": [[18, "featured-examples"]], "Biolearn and the Future of Biomarkers": [[35, "biolearn-and-the-future-of-biomarkers"]], "Join Us": [[35, "join-us"]], "Building a competition submission using an existing model": [[11, "building-a-competition-submission-using-an-existing-model"]], "Loading up the data for the competition": [[11, "loading-up-the-data-for-the-competition"], [12, "loading-up-the-data-for-the-competition"]], "Use the Lin model to predict the age": [[11, "use-the-lin-model-to-predict-the-age"]], "Training an ElasticNet model": [[12, "training-an-elasticnet-model"]], "Load up some training data": [[12, "load-up-some-training-data"]], "Seperate data into training and test sets": [[12, "seperate-data-into-training-and-test-sets"]], "Train a model using elastic net": [[12, "train-a-model-using-elastic-net"]], "Plot the results to see how good our model is": [[12, "plot-the-results-to-see-how-good-our-model-is"]], "Run the challenge data through the model": [[12, "run-the-challenge-data-through-the-model"]], "Save the results as an output file for submission": [[12, "save-the-results-as-an-output-file-for-submission"]], "Clocks and Other Models": [[16, "clocks-and-other-models"]], "GEO Data Sources": [[17, "geo-data-sources"]]}, "indexentries": {"biolearn.data_library": [[19, "module-biolearn.data_library"]], "module": [[19, "module-biolearn.data_library"], [30, "module-biolearn.imputation"], [32, "module-biolearn.load"], [33, "module-biolearn.model_gallery"]], "datalibrary (class in biolearn.data_library)": [[20, "biolearn.data_library.DataLibrary"]], "__init__() (biolearn.data_library.datalibrary method)": [[20, "biolearn.data_library.DataLibrary.__init__"]], "get() (biolearn.data_library.datalibrary method)": [[20, "biolearn.data_library.DataLibrary.get"]], "load_sources() (biolearn.data_library.datalibrary method)": [[20, "biolearn.data_library.DataLibrary.load_sources"]], "lookup_sources() (biolearn.data_library.datalibrary method)": [[20, "biolearn.data_library.DataLibrary.lookup_sources"]], "datasource (class in biolearn.data_library)": [[21, "biolearn.data_library.DataSource"]], "required_fields (biolearn.data_library.datasource attribute)": [[21, "biolearn.data_library.DataSource.REQUIRED_FIELDS"]], "__init__() (biolearn.data_library.datasource method)": [[21, "biolearn.data_library.DataSource.__init__"]], "load() (biolearn.data_library.datasource method)": [[21, "biolearn.data_library.DataSource.load"]], "geodata (class in biolearn.data_library)": [[22, "biolearn.data_library.GeoData"]], "__init__() (biolearn.data_library.geodata method)": [[22, "biolearn.data_library.GeoData.__init__"]], "copy() (biolearn.data_library.geodata method)": [[22, "biolearn.data_library.GeoData.copy"]], "dnam (biolearn.data_library.geodata attribute)": [[22, "biolearn.data_library.GeoData.dnam"]], "from_methylation_matrix() (biolearn.data_library.geodata class method)": [[22, "biolearn.data_library.GeoData.from_methylation_matrix"]], "metadata (biolearn.data_library.geodata attribute)": [[22, "biolearn.data_library.GeoData.metadata"]], "quality_report() (biolearn.data_library.geodata method)": [[22, "biolearn.data_library.GeoData.quality_report"]], "biolearn_impute() (in module biolearn.imputation)": [[23, "biolearn.imputation.biolearn_impute"]], "hybrid_impute() (in module biolearn.imputation)": [[24, "biolearn.imputation.hybrid_impute"]], "impute_from_average() (in module biolearn.imputation)": [[25, "biolearn.imputation.impute_from_average"]], "impute_from_standard() (in module biolearn.imputation)": [[26, "biolearn.imputation.impute_from_standard"]], "load_fhs() (in module biolearn.load)": [[27, "biolearn.load.load_fhs"]], "load_nhanes() (in module biolearn.load)": [[28, "biolearn.load.load_nhanes"]], "modelgallery (class in biolearn.model_gallery)": [[29, "biolearn.model_gallery.ModelGallery"]], "__init__() (biolearn.model_gallery.modelgallery method)": [[29, "biolearn.model_gallery.ModelGallery.__init__"]], "get() (biolearn.model_gallery.modelgallery method)": [[29, "biolearn.model_gallery.ModelGallery.get"]], "model_builders (biolearn.model_gallery.modelgallery attribute)": [[29, "biolearn.model_gallery.ModelGallery.model_builders"]], "search() (biolearn.model_gallery.modelgallery method)": [[29, "biolearn.model_gallery.ModelGallery.search"]], "biolearn.imputation": [[30, "module-biolearn.imputation"]], "biolearn.load": [[32, "module-biolearn.load"]], "biolearn.model_gallery": [[33, "module-biolearn.model_gallery"]]}})